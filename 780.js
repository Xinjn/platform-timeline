(self["webpackChunktimeline"]=self["webpackChunktimeline"]||[]).push([[780],{8961:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ input_number; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(3066);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(4763);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(47103);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__(19877);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/DownOutlined.js + 1 modules\nvar DownOutlined = __webpack_require__(57254);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__(45937);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/icons-svg/es/asn/UpOutlined.js\n// This icon file is generated automatically.\nvar UpOutlined = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z" } }] }, "name": "up", "theme": "outlined" };\n/* harmony default export */ var asn_UpOutlined = (UpOutlined);\n\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/components/AntdIcon.js + 2 modules\nvar AntdIcon = __webpack_require__(27029);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/icons/es/icons/UpOutlined.js\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\n\nvar UpOutlined_UpOutlined = function UpOutlined(props, ref) {\n  return /*#__PURE__*/react.createElement(AntdIcon/* default */.Z, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, props), {}, {\n    ref: ref,\n    icon: asn_UpOutlined\n  }));\n};\n\nUpOutlined_UpOutlined.displayName = \'UpOutlined\';\n/* harmony default export */ var icons_UpOutlined = (/*#__PURE__*/react.forwardRef(UpOutlined_UpOutlined));\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(35510);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(63309);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/KeyCode.js\nvar KeyCode = __webpack_require__(90826);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/ref.js\nvar es_ref = __webpack_require__(78703);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(96285);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(76553);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/utils/supportUtil.js\nfunction supportBigInt() {\n  return typeof BigInt === \'function\';\n}\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/utils/numberUtil.js\n\n/**\n * Format string number to readable number\n */\n\nfunction trimNumber(numStr) {\n  var str = numStr.trim();\n  var negative = str.startsWith(\'-\');\n\n  if (negative) {\n    str = str.slice(1);\n  }\n\n  str = str // Remove decimal 0. `1.000` => `1.`, `1.100` => `1.1`\n  .replace(/(\\.\\d*[^0])0*$/, \'$1\') // Remove useless decimal. `1.` => `1`\n  .replace(/\\.0*$/, \'\') // Remove integer 0. `0001` => `1`, 000.1\' => `.1`\n  .replace(/^0+/, \'\');\n\n  if (str.startsWith(\'.\')) {\n    str = "0".concat(str);\n  }\n\n  var trimStr = str || \'0\';\n  var splitNumber = trimStr.split(\'.\');\n  var integerStr = splitNumber[0] || \'0\';\n  var decimalStr = splitNumber[1] || \'0\';\n\n  if (integerStr === \'0\' && decimalStr === \'0\') {\n    negative = false;\n  }\n\n  var negativeStr = negative ? \'-\' : \'\';\n  return {\n    negative: negative,\n    negativeStr: negativeStr,\n    trimStr: trimStr,\n    integerStr: integerStr,\n    decimalStr: decimalStr,\n    fullStr: "".concat(negativeStr).concat(trimStr)\n  };\n}\nfunction isE(number) {\n  var str = String(number);\n  return !Number.isNaN(Number(str)) && str.includes(\'e\');\n}\n/**\n * [Legacy] Convert 1e-9 to 0.000000001.\n * This may lose some precision if user really want 1e-9.\n */\n\nfunction getNumberPrecision(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    var precision = Number(numStr.slice(numStr.indexOf(\'e-\') + 2));\n    var decimalMatch = numStr.match(/\\.(\\d+)/);\n\n    if (decimalMatch === null || decimalMatch === void 0 ? void 0 : decimalMatch[1]) {\n      precision += decimalMatch[1].length;\n    }\n\n    return precision;\n  }\n\n  return numStr.includes(\'.\') && validateNumber(numStr) ? numStr.length - numStr.indexOf(\'.\') - 1 : 0;\n}\n/**\n * Convert number (includes scientific notation) to -xxx.yyy format\n */\n\nfunction num2str(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    if (number > Number.MAX_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MAX_SAFE_INTEGER);\n    }\n\n    if (number < Number.MIN_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MIN_SAFE_INTEGER);\n    }\n\n    numStr = number.toFixed(getNumberPrecision(numStr));\n  }\n\n  return trimNumber(numStr).fullStr;\n}\nfunction validateNumber(num) {\n  if (typeof num === \'number\') {\n    return !Number.isNaN(num);\n  } // Empty\n\n\n  if (!num) {\n    return false;\n  }\n\n  return (// Normal type: 11.28\n    /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(num) || // Pre-number: 1.\n    /^\\s*-?\\d+\\.\\s*$/.test(num) || // Post-number: .1\n    /^\\s*-?\\.\\d+\\s*$/.test(num)\n  );\n}\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/utils/MiniDecimal.js\n\n\n/* eslint-disable max-classes-per-file */\n\n\n\n/**\n * We can remove this when IE not support anymore\n */\n\nvar NumberDecimal = /*#__PURE__*/function () {\n  function NumberDecimal(value) {\n    (0,classCallCheck/* default */.Z)(this, NumberDecimal);\n\n    this.origin = \'\';\n    this.number = void 0;\n    this.empty = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value);\n    this.number = Number(value);\n  }\n\n  (0,createClass/* default */.Z)(NumberDecimal, [{\n    key: "negate",\n    value: function negate() {\n      return new NumberDecimal(-this.toNumber());\n    }\n  }, {\n    key: "add",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new NumberDecimal(value);\n      }\n\n      var target = Number(value);\n\n      if (Number.isNaN(target)) {\n        return this;\n      }\n\n      var number = this.number + target; // [Legacy] Back to safe integer\n\n      if (number > Number.MAX_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n      }\n\n      if (number < Number.MIN_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n      }\n\n      var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(target));\n      return new NumberDecimal(number.toFixed(maxPrecision));\n    }\n  }, {\n    key: "isEmpty",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: "isNaN",\n    value: function isNaN() {\n      return Number.isNaN(this.number);\n    }\n  }, {\n    key: "isInvalidate",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: "equals",\n    value: function equals(target) {\n      return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    }\n  }, {\n    key: "lessEquals",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: "toNumber",\n    value: function toNumber() {\n      return this.number;\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return \'\';\n      }\n\n      return num2str(this.number);\n    }\n  }]);\n\n  return NumberDecimal;\n}();\nvar BigIntDecimal = /*#__PURE__*/function () {\n  /** BigInt will convert `0009` to `9`. We need record the len of decimal */\n  function BigIntDecimal(value) {\n    (0,classCallCheck/* default */.Z)(this, BigIntDecimal);\n\n    this.origin = \'\';\n    this.negative = void 0;\n    this.integer = void 0;\n    this.decimal = void 0;\n    this.decimalLen = void 0;\n    this.empty = void 0;\n    this.nan = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value); // Act like Number convert\n\n    if (value === \'-\') {\n      this.nan = true;\n      return;\n    }\n\n    var mergedValue = value; // We need convert back to Number since it require `toFixed` to handle this\n\n    if (isE(mergedValue)) {\n      mergedValue = Number(mergedValue);\n    }\n\n    mergedValue = typeof mergedValue === \'string\' ? mergedValue : num2str(mergedValue);\n\n    if (validateNumber(mergedValue)) {\n      var trimRet = trimNumber(mergedValue);\n      this.negative = trimRet.negative;\n      var numbers = trimRet.trimStr.split(\'.\');\n      this.integer = BigInt(numbers[0]);\n      var decimalStr = numbers[1] || \'0\';\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.nan = true;\n    }\n  }\n\n  (0,createClass/* default */.Z)(BigIntDecimal, [{\n    key: "getMark",\n    value: function getMark() {\n      return this.negative ? \'-\' : \'\';\n    }\n  }, {\n    key: "getIntegerStr",\n    value: function getIntegerStr() {\n      return this.integer.toString();\n    }\n  }, {\n    key: "getDecimalStr",\n    value: function getDecimalStr() {\n      return this.decimal.toString().padStart(this.decimalLen, \'0\');\n    }\n    /**\n     * Align BigIntDecimal with same decimal length. e.g. 12.3 + 5 = 1230000\n     * This is used for add function only.\n     */\n\n  }, {\n    key: "alignDecimal",\n    value: function alignDecimal(decimalLength) {\n      var str = "".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength, \'0\'));\n      return BigInt(str);\n    }\n  }, {\n    key: "negate",\n    value: function negate() {\n      var clone = new BigIntDecimal(this.toString());\n      clone.negative = !clone.negative;\n      return clone;\n    }\n  }, {\n    key: "add",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new BigIntDecimal(value);\n      }\n\n      var offset = new BigIntDecimal(value);\n\n      if (offset.isInvalidate()) {\n        return this;\n      }\n\n      var maxDecimalLength = Math.max(this.getDecimalStr().length, offset.getDecimalStr().length);\n      var myAlignedDecimal = this.alignDecimal(maxDecimalLength);\n      var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n      var valueStr = (myAlignedDecimal + offsetAlignedDecimal).toString(); // We need fill string length back to `maxDecimalLength` to avoid parser failed\n\n      var _trimNumber = trimNumber(valueStr),\n          negativeStr = _trimNumber.negativeStr,\n          trimStr = _trimNumber.trimStr;\n\n      var hydrateValueStr = "".concat(negativeStr).concat(trimStr.padStart(maxDecimalLength + 1, \'0\'));\n      return new BigIntDecimal("".concat(hydrateValueStr.slice(0, -maxDecimalLength), ".").concat(hydrateValueStr.slice(-maxDecimalLength)));\n    }\n  }, {\n    key: "isEmpty",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: "isNaN",\n    value: function isNaN() {\n      return this.nan;\n    }\n  }, {\n    key: "isInvalidate",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: "equals",\n    value: function equals(target) {\n      return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    }\n  }, {\n    key: "lessEquals",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: "toNumber",\n    value: function toNumber() {\n      if (this.isNaN()) {\n        return NaN;\n      }\n\n      return Number(this.toString());\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return \'\';\n      }\n\n      return trimNumber("".concat(this.getMark()).concat(this.getIntegerStr(), ".").concat(this.getDecimalStr())).fullStr;\n    }\n  }]);\n\n  return BigIntDecimal;\n}();\nfunction getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if (supportBigInt()) {\n    return new BigIntDecimal(value);\n  }\n\n  return new NumberDecimal(value);\n}\n/**\n * Align the logic of toFixed to around like 1.5 => 2\n */\n\nfunction toFixed(numStr, separatorStr, precision) {\n  if (numStr === \'\') {\n    return \'\';\n  }\n\n  var _trimNumber2 = trimNumber(numStr),\n      negativeStr = _trimNumber2.negativeStr,\n      integerStr = _trimNumber2.integerStr,\n      decimalStr = _trimNumber2.decimalStr;\n\n  var precisionDecimalStr = "".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = "".concat(negativeStr).concat(integerStr);\n\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n\n    if (advancedNum >= 5) {\n      var advancedDecimal = getMiniDecimal(numStr).add("".concat(negativeStr, "0.").concat(\'0\'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision);\n    }\n\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n\n    return "".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, \'0\').slice(0, precision));\n  }\n\n  if (precisionDecimalStr === \'.0\') {\n    return numberWithoutDecimal;\n  }\n\n  return "".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}\n// EXTERNAL MODULE: ./node_modules/rc-util/es/isMobile.js\nvar isMobile = __webpack_require__(44581);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/StepHandler.js\n\n\n\n\n\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar STEP_INTERVAL = 200;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar STEP_DELAY = 600;\nfunction StepHandler(_ref) {\n  var prefixCls = _ref.prefixCls,\n      upNode = _ref.upNode,\n      downNode = _ref.downNode,\n      upDisabled = _ref.upDisabled,\n      downDisabled = _ref.downDisabled,\n      onStep = _ref.onStep; // ======================== Step ========================\n\n  var stepTimeoutRef = react.useRef();\n  var onStepRef = react.useRef();\n  onStepRef.current = onStep; // We will interval update step when hold mouse down\n\n  var onStepMouseDown = function onStepMouseDown(e, up) {\n    e.preventDefault();\n    onStepRef.current(up); // Loop step for interval\n\n    function loopStep() {\n      onStepRef.current(up);\n      stepTimeoutRef.current = setTimeout(loopStep, STEP_INTERVAL);\n    } // First time press will wait some time to trigger loop step update\n\n\n    stepTimeoutRef.current = setTimeout(loopStep, STEP_DELAY);\n  };\n\n  var onStopStep = function onStopStep() {\n    clearTimeout(stepTimeoutRef.current);\n  };\n\n  react.useEffect(function () {\n    return onStopStep;\n  }, []); // ======================= Render =======================\n\n  if ((0,isMobile/* default */.Z)()) {\n    return null;\n  }\n\n  var handlerClassName = "".concat(prefixCls, "-handler");\n  var upClassName = classnames_default()(handlerClassName, "".concat(handlerClassName, "-up"), (0,defineProperty/* default */.Z)({}, "".concat(handlerClassName, "-up-disabled"), upDisabled));\n  var downClassName = classnames_default()(handlerClassName, "".concat(handlerClassName, "-down"), (0,defineProperty/* default */.Z)({}, "".concat(handlerClassName, "-down-disabled"), downDisabled));\n  var sharedHandlerProps = {\n    unselectable: \'on\',\n    role: \'button\',\n    onMouseUp: onStopStep,\n    onMouseLeave: onStopStep\n  };\n  return /*#__PURE__*/react.createElement("div", {\n    className: "".concat(handlerClassName, "-wrap")\n  }, /*#__PURE__*/react.createElement("span", (0,esm_extends/* default */.Z)({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, true);\n    },\n    "aria-label": "Increase Value",\n    "aria-disabled": upDisabled,\n    className: upClassName\n  }), upNode || /*#__PURE__*/react.createElement("span", {\n    unselectable: "on",\n    className: "".concat(prefixCls, "-handler-up-inner")\n  })), /*#__PURE__*/react.createElement("span", (0,esm_extends/* default */.Z)({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, false);\n    },\n    "aria-label": "Decrease Value",\n    "aria-disabled": downDisabled,\n    className: downClassName\n  }), downNode || /*#__PURE__*/react.createElement("span", {\n    unselectable: "on",\n    className: "".concat(prefixCls, "-handler-down-inner")\n  })));\n}\n// EXTERNAL MODULE: ./node_modules/rc-util/es/warning.js\nvar warning = __webpack_require__(32503);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/hooks/useCursor.js\n\n\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\n\nfunction useCursor(input, focused) {\n  var selectionRef = (0,react.useRef)(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the \'selectionStart\' property from \'HTMLInputElement\'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        (0,warning/* default */.ZP)(false, "Something warning of cursor restore. Please fire issue about this: ".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}\n// EXTERNAL MODULE: ./node_modules/rc-util/es/Dom/canUseDom.js\nvar canUseDom = __webpack_require__(20064);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/hooks/useLayoutEffect.js\n\n\nvar useLayoutEffect = (0,canUseDom/* default */.Z)() ? react.useLayoutEffect : react.useEffect;\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/hooks/useUpdateEffect.js\n\n\n/**\n * Work as `componentDidUpdate`\n */\n\nfunction useUpdateEffect(callback, condition) {\n  var initRef = react.useRef(false);\n  useLayoutEffect(function () {\n    if (!initRef.current) {\n      initRef.current = true;\n      return undefined;\n    }\n\n    return callback();\n  }, condition);\n}\n// EXTERNAL MODULE: ./node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__(90468);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/hooks/useFrame.js\n\n\n/**\n * Always trigger latest once when call multiple time\n */\n\n/* harmony default export */ var useFrame = (function () {\n  var idRef = (0,react.useRef)(0);\n\n  var cleanUp = function cleanUp() {\n    raf/* default.cancel */.Z.cancel(idRef.current);\n  };\n\n  (0,react.useEffect)(function () {\n    return cleanUp;\n  }, []);\n  return function (callback) {\n    cleanUp();\n    idRef.current = (0,raf/* default */.Z)(function () {\n      callback();\n    });\n  };\n});\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/InputNumber.js\n\n\n\n\n\nvar _excluded = ["prefixCls", "className", "style", "min", "max", "step", "defaultValue", "value", "disabled", "readOnly", "upHandler", "downHandler", "keyboard", "controls", "stringMode", "parser", "formatter", "precision", "decimalSeparator", "onChange", "onInput", "onPressEnter", "onStep"];\n\n\n\n\n\n\n\n\n\n\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n */\n\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n\n  return decimalValue.toNumber();\n};\n\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\n\nvar InputNumber = /*#__PURE__*/react.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? \'rc-input-number\' : _props$prefixCls,\n      className = props.className,\n      style = props.style,\n      min = props.min,\n      max = props.max,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      upHandler = props.upHandler,\n      downHandler = props.downHandler,\n      keyboard = props.keyboard,\n      _props$controls = props.controls,\n      controls = _props$controls === void 0 ? true : _props$controls,\n      stringMode = props.stringMode,\n      parser = props.parser,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      onChange = props.onChange,\n      onInput = props.onInput,\n      onPressEnter = props.onPressEnter,\n      onStep = props.onStep,\n      inputProps = (0,objectWithoutProperties/* default */.Z)(props, _excluded);\n\n  var inputClassName = "".concat(prefixCls, "-input");\n  var inputRef = react.useRef(null);\n\n  var _React$useState = react.useState(false),\n      _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n      focus = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var userTypingRef = react.useRef(false);\n  var compositionRef = react.useRef(false); // ============================ Value =============================\n  // Real value control\n\n  var _React$useState3 = react.useState(function () {\n    return getMiniDecimal(value !== null && value !== void 0 ? value : defaultValue);\n  }),\n      _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),\n      decimalValue = _React$useState4[0],\n      setDecimalValue = _React$useState4[1];\n\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  } // ====================== Parser & Formatter ======================\n\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n\n\n  var getPrecision = react.useCallback(function (numStr, userTyping) {\n    if (userTyping) {\n      return undefined;\n    }\n\n    if (precision >= 0) {\n      return precision;\n    }\n\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]); // >>> Parser\n\n  var mergedParser = react.useCallback(function (num) {\n    var numStr = String(num);\n\n    if (parser) {\n      return parser(numStr);\n    }\n\n    var parsedStr = numStr;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, \'.\');\n    } // [Legacy] We still support auto convert `$ 123,456` to `123456`\n\n\n    return parsedStr.replace(/[^\\w.-]+/g, \'\');\n  }, [parser, decimalSeparator]); // >>> Formatter\n\n  var inputValueRef = react.useRef(\'\');\n  var mergedFormatter = react.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number, {\n        userTyping: userTyping,\n        input: String(inputValueRef.current)\n      });\n    }\n\n    var str = typeof number === \'number\' ? num2str(number) : number; // User typing will not auto format with precision directly\n\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || \'.\';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]); // ========================== InputValue ==========================\n\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It update with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n\n  var _React$useState5 = react.useState(function () {\n    var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n\n    if (decimalValue.isInvalidate() && [\'string\', \'number\'].includes((0,esm_typeof/* default */.Z)(initValue))) {\n      return Number.isNaN(initValue) ? \'\' : initValue;\n    }\n\n    return mergedFormatter(decimalValue.toString(), false);\n  }),\n      _React$useState6 = (0,slicedToArray/* default */.Z)(_React$useState5, 2),\n      inputValue = _React$useState6[0],\n      setInternalInputValue = _React$useState6[1];\n\n  inputValueRef.current = inputValue; // Should always be string\n\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter( // Invalidate number is sometime passed by external control, we should let it go\n    // Otherwise is controlled by internal interactive logic which check by userTyping\n    // You can ref \'show limited value when input is not focused\' test for more info.\n    newValue.isInvalidate() ? newValue.toString(false) : newValue.toString(!userTyping), userTyping));\n  } // >>> Max & Min limit\n\n\n  var maxDecimal = react.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max]);\n  var minDecimal = react.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min]);\n  var upDisabled = react.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = react.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]); // Cursor controller\n\n  var _useCursor = useCursor(inputRef.current, focus),\n      _useCursor2 = (0,slicedToArray/* default */.Z)(_useCursor, 2),\n      recordCursor = _useCursor2[0],\n      restoreCursor = _useCursor2[1]; // ============================= Data =============================\n\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n\n\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    } // target < min\n\n\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n\n    return null;\n  };\n  /**\n   * Check value is in [min, max] range\n   */\n\n\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n\n\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue;\n    var isRangeValidate = isInRange(updateValue) || updateValue.isEmpty(); // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n    // This should not block user typing\n\n    if (!updateValue.isEmpty() && !userTyping) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n      isRangeValidate = true;\n    }\n\n    if (!readOnly && !disabled && isRangeValidate) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, \'.\', mergedPrecision));\n      } // Trigger event\n\n\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 ? void 0 : onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue)); // Reformat input if value is not controlled\n\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n\n      return updateValue;\n    }\n\n    return decimalValue;\n  }; // ========================== User Input ==========================\n\n\n  var onNextPromise = useFrame(); // >>> Collect input value\n\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor(); // Update inputValue incase input can not parse as number\n\n    setInternalInputValue(inputStr); // Parse number\n\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    } // Trigger onInput later to let user customize value if they want do handle something after onChange\n\n\n    onInput === null || onInput === void 0 ? void 0 : onInput(inputStr); // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n\n    onNextPromise(function () {\n      var nextInputStr = inputStr;\n\n      if (!parser) {\n        nextInputStr = inputStr.replace(/\u3002/g, \'.\');\n      }\n\n      if (nextInputStr !== inputStr) {\n        collectInputValue(nextInputStr);\n      }\n    });\n  }; // >>> Composition\n\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  }; // >>> Input\n\n\n  var onInternalInput = function onInternalInput(e) {\n    collectInputValue(e.target.value);\n  }; // ============================= Step =============================\n\n\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current; // Ignore step since out of range\n\n\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    } // Clear typing status since it may caused by up & down key.\n    // We should sync with input value.\n\n\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(step);\n\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 ? void 0 : onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: step,\n      type: up ? \'up\' : \'down\'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }; // ============================ Flush =============================\n\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed\n   */\n\n\n  var flushInputValue = function flushInputValue(userTyping) {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue = parsedValue;\n\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, userTyping);\n    } else {\n      formatValue = decimalValue;\n    }\n\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  var onKeyDown = function onKeyDown(event) {\n    var which = event.which;\n    userTypingRef.current = true;\n\n    if (which === KeyCode/* default.ENTER */.Z.ENTER) {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n\n      flushInputValue(false);\n      onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter(event);\n    }\n\n    if (keyboard === false) {\n      return;\n    } // Do step\n\n\n    if (!compositionRef.current && [KeyCode/* default.UP */.Z.UP, KeyCode/* default.DOWN */.Z.DOWN].includes(which)) {\n      onInternalStep(KeyCode/* default.UP */.Z.UP === which);\n      event.preventDefault();\n    }\n  };\n\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n  }; // >>> Focus & Blur\n\n\n  var onBlur = function onBlur() {\n    flushInputValue(false);\n    setFocus(false);\n    userTypingRef.current = false;\n  }; // ========================== Controlled ==========================\n  // Input by precision\n\n\n  useUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision]); // Input by value\n\n  useUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue);\n    var currentParsedValue = getMiniDecimal(mergedParser(inputValue)); // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n\n    if (!newValue.equals(currentParsedValue) || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, userTypingRef.current);\n    }\n  }, [value]); // ============================ Cursor ============================\n\n  useUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]); // ============================ Render ============================\n\n  return /*#__PURE__*/react.createElement("div", {\n    className: classnames_default()(prefixCls, className, (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-focused"), focus), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-disabled"), disabled), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-readonly"), readOnly), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-not-a-number"), decimalValue.isNaN()), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-out-of-range"), !decimalValue.isInvalidate() && !isInRange(decimalValue)), _classNames)),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  }, controls && /*#__PURE__*/react.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/react.createElement("div", {\n    className: "".concat(inputClassName, "-wrap")\n  }, /*#__PURE__*/react.createElement("input", (0,esm_extends/* default */.Z)({\n    autoComplete: "off",\n    role: "spinbutton",\n    "aria-valuemin": min,\n    "aria-valuemax": max,\n    "aria-valuenow": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: (0,es_ref/* composeRef */.sQ)(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nInputNumber.displayName = \'InputNumber\';\n/* harmony default export */ var es_InputNumber = (InputNumber);\n;// CONCATENATED MODULE: ./node_modules/rc-input-number/es/index.js\n\n/* harmony default export */ var es = (es_InputNumber);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(9054);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/DisabledContext.js\nvar DisabledContext = __webpack_require__(99469);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/SizeContext.js\nvar SizeContext = __webpack_require__(10772);\n// EXTERNAL MODULE: ./node_modules/antd/es/form/context.js\nvar form_context = __webpack_require__(27495);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/reactNode.js\nvar reactNode = __webpack_require__(75447);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/statusUtils.js\nvar statusUtils = __webpack_require__(16786);\n;// CONCATENATED MODULE: ./node_modules/antd/es/input-number/index.js\n\n\n\n\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar input_number_InputNumber = /*#__PURE__*/react.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = react.useContext(context/* ConfigContext */.E_),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = react.useContext(SizeContext/* default */.Z);\n\n  var _React$useState = react.useState(false),\n      _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var inputRef = react.useRef(null);\n  react.useImperativeHandle(ref, function () {\n    return inputRef.current;\n  });\n\n  var className = props.className,\n      customizeSize = props.size,\n      customDisabled = props.disabled,\n      customizePrefixCls = props.prefixCls,\n      addonBefore = props.addonBefore,\n      addonAfter = props.addonAfter,\n      prefix = props.prefix,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      readOnly = props.readOnly,\n      customStatus = props.status,\n      controls = props.controls,\n      others = __rest(props, ["className", "size", "disabled", "prefixCls", "addonBefore", "addonAfter", "prefix", "bordered", "readOnly", "status", "controls"]);\n\n  var prefixCls = getPrefixCls(\'input-number\', customizePrefixCls);\n  var upIcon = /*#__PURE__*/react.createElement(icons_UpOutlined, {\n    className: "".concat(prefixCls, "-handler-up-inner")\n  });\n  var downIcon = /*#__PURE__*/react.createElement(DownOutlined/* default */.Z, {\n    className: "".concat(prefixCls, "-handler-down-inner")\n  });\n  var controlsTemp = typeof controls === \'boolean\' ? controls : undefined;\n\n  if ((0,esm_typeof/* default */.Z)(controls) === \'object\') {\n    upIcon = typeof controls.upIcon === \'undefined\' ? upIcon : /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-handler-up-inner")\n    }, controls.upIcon);\n    downIcon = typeof controls.downIcon === \'undefined\' ? downIcon : /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-handler-down-inner")\n    }, controls.downIcon);\n  }\n\n  var _useContext = (0,react.useContext)(form_context/* FormItemInputContext */.aM),\n      hasFeedback = _useContext.hasFeedback,\n      contextStatus = _useContext.status,\n      isFormItemInput = _useContext.isFormItemInput,\n      feedbackIcon = _useContext.feedbackIcon;\n\n  var mergedStatus = (0,statusUtils/* getMergedStatus */.F)(contextStatus, customStatus);\n  var mergeSize = customizeSize || size; // ===================== Disabled =====================\n\n  var disabled = react.useContext(DisabledContext/* default */.Z);\n  var mergedDisabled = customDisabled || disabled;\n  var inputNumberClass = classnames_default()((_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-lg"), mergeSize === \'large\'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-sm"), mergeSize === \'small\'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-rtl"), direction === \'rtl\'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-readonly"), readOnly), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-borderless"), !bordered), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-in-form-item"), isFormItemInput), _classNames), (0,statusUtils/* getStatusClassNames */.Z)(prefixCls, mergedStatus), className);\n  var element = /*#__PURE__*/react.createElement(es, (0,esm_extends/* default */.Z)({\n    ref: inputRef,\n    disabled: mergedDisabled,\n    className: inputNumberClass,\n    upHandler: upIcon,\n    downHandler: downIcon,\n    prefixCls: prefixCls,\n    readOnly: readOnly,\n    controls: controlsTemp\n  }, others));\n\n  if (prefix != null || hasFeedback) {\n    var _classNames2;\n\n    var affixWrapperCls = classnames_default()("".concat(prefixCls, "-affix-wrapper"), (0,statusUtils/* getStatusClassNames */.Z)("".concat(prefixCls, "-affix-wrapper"), mergedStatus, hasFeedback), (_classNames2 = {}, (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-focused"), focused), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-disabled"), props.disabled), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-sm"), size === \'small\'), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-lg"), size === \'large\'), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-rtl"), direction === \'rtl\'), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-readonly"), readOnly), (0,defineProperty/* default */.Z)(_classNames2, "".concat(prefixCls, "-affix-wrapper-borderless"), !bordered), (0,defineProperty/* default */.Z)(_classNames2, "".concat(className), !(addonBefore || addonAfter) && className), _classNames2));\n    element = /*#__PURE__*/react.createElement("div", {\n      className: affixWrapperCls,\n      style: props.style,\n      onMouseUp: function onMouseUp() {\n        return inputRef.current.focus();\n      }\n    }, prefix && /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-prefix")\n    }, prefix), (0,reactNode/* cloneElement */.Tm)(element, {\n      style: null,\n      value: props.value,\n      onFocus: function onFocus(event) {\n        var _a;\n\n        setFocus(true);\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      },\n      onBlur: function onBlur(event) {\n        var _a;\n\n        setFocus(false);\n        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      }\n    }), hasFeedback && /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-suffix")\n    }, feedbackIcon));\n  }\n\n  if (addonBefore != null || addonAfter != null) {\n    var _classNames4;\n\n    var wrapperClassName = "".concat(prefixCls, "-group");\n    var addonClassName = "".concat(wrapperClassName, "-addon");\n    var addonBeforeNode = addonBefore ? /*#__PURE__*/react.createElement("div", {\n      className: addonClassName\n    }, addonBefore) : null;\n    var addonAfterNode = addonAfter ? /*#__PURE__*/react.createElement("div", {\n      className: addonClassName\n    }, addonAfter) : null;\n    var mergedWrapperClassName = classnames_default()("".concat(prefixCls, "-wrapper"), wrapperClassName, (0,defineProperty/* default */.Z)({}, "".concat(wrapperClassName, "-rtl"), direction === \'rtl\'));\n    var mergedGroupClassName = classnames_default()("".concat(prefixCls, "-group-wrapper"), (_classNames4 = {}, (0,defineProperty/* default */.Z)(_classNames4, "".concat(prefixCls, "-group-wrapper-sm"), size === \'small\'), (0,defineProperty/* default */.Z)(_classNames4, "".concat(prefixCls, "-group-wrapper-lg"), size === \'large\'), (0,defineProperty/* default */.Z)(_classNames4, "".concat(prefixCls, "-group-wrapper-rtl"), direction === \'rtl\'), _classNames4), (0,statusUtils/* getStatusClassNames */.Z)("".concat(prefixCls, "-group-wrapper"), mergedStatus, hasFeedback), className);\n    element = /*#__PURE__*/react.createElement("div", {\n      className: mergedGroupClassName,\n      style: props.style\n    }, /*#__PURE__*/react.createElement("div", {\n      className: mergedWrapperClassName\n    }, addonBeforeNode && /*#__PURE__*/react.createElement(form_context/* NoFormStyle */.Ux, {\n      status: true,\n      override: true\n    }, addonBeforeNode), (0,reactNode/* cloneElement */.Tm)(element, {\n      style: null,\n      disabled: mergedDisabled\n    }), addonAfterNode && /*#__PURE__*/react.createElement(form_context/* NoFormStyle */.Ux, {\n      status: true,\n      override: true\n    }, addonAfterNode)));\n  }\n\n  return element;\n});\n/* harmony default export */ var input_number = (input_number_InputNumber);\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/input-number/index.js_+_12_modules?')},11826:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38842);\n/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_default_less__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78077);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);\n\n // deps-lint-skip: form\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/input-number/style/index.js?")},28930:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3066);\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(19877);\n/* harmony import */ var _ant_design_icons_es_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(68855);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35510);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rc_util_es_hooks_useMergedState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23341);\n/* harmony import */ var rc_util_es_KeyCode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(90826);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67294);\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48429);\n/* harmony import */ var _button_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(17870);\n/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9054);\n/* harmony import */ var _locale_provider_LocaleReceiver__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(56701);\n/* harmony import */ var _locale_default__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(16980);\n/* harmony import */ var _popover__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(56466);\n/* harmony import */ var _util_ActionButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(25769);\n/* harmony import */ var _util_getRenderPropValue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(95832);\n/* harmony import */ var _util_reactNode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(75447);\n\n\n\nvar _this = undefined;\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Popconfirm = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(function (props, ref) {\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_3__.useContext(_config_provider__WEBPACK_IMPORTED_MODULE_4__/* .ConfigContext */ .E_),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var _useMergedState = (0,rc_util_es_hooks_useMergedState__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }),\n      _useMergedState2 = (0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__/* .default */ .Z)(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1]; // const isDestroyed = useDestroyed();\n\n\n  var settingVisible = function settingVisible(value, e) {\n    var _a;\n\n    setVisible(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n  };\n\n  var close = function close(e) {\n    settingVisible(false, e);\n  };\n\n  var onConfirm = function onConfirm(e) {\n    var _a;\n\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var onCancel = function onCancel(e) {\n    var _a;\n\n    settingVisible(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === rc_util_es_KeyCode__WEBPACK_IMPORTED_MODULE_2__/* .default.ESC */ .Z.ESC && visible) {\n      settingVisible(false, e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(value) {\n    var disabled = props.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    settingVisible(value);\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls, popconfirmLocale) {\n    var okButtonProps = props.okButtonProps,\n        cancelButtonProps = props.cancelButtonProps,\n        title = props.title,\n        cancelText = props.cancelText,\n        okText = props.okText,\n        okType = props.okType,\n        icon = props.icon,\n        _props$showCancel = props.showCancel,\n        showCancel = _props$showCancel === void 0 ? true : _props$showCancel;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("div", {\n      className: "".concat(prefixCls, "-inner-content")\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("div", {\n      className: "".concat(prefixCls, "-message")\n    }, icon, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("div", {\n      className: "".concat(prefixCls, "-message-title")\n    }, (0,_util_getRenderPropValue__WEBPACK_IMPORTED_MODULE_6__/* .getRenderPropValue */ .Z)(title))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("div", {\n      className: "".concat(prefixCls, "-buttons")\n    }, showCancel && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_button__WEBPACK_IMPORTED_MODULE_7__/* .default */ .Z, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z)({\n      onClick: onCancel,\n      size: "small"\n    }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_util_ActionButton__WEBPACK_IMPORTED_MODULE_9__/* .default */ .Z, {\n      buttonProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z)({\n        size: \'small\'\n      }, (0,_button_button__WEBPACK_IMPORTED_MODULE_10__/* .convertLegacyProps */ .n)(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls(\'btn\'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText || popconfirmLocale.okText)));\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      placement = props.placement,\n      children = props.children,\n      overlayClassName = props.overlayClassName,\n      restProps = __rest(props, ["prefixCls", "placement", "children", "overlayClassName"]);\n\n  var prefixCls = getPrefixCls(\'popover\', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls(\'popconfirm\', customizePrefixCls);\n  var overlayClassNames = classnames__WEBPACK_IMPORTED_MODULE_0___default()(prefixClsConfirm, overlayClassName);\n  var overlay = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_locale_provider_LocaleReceiver__WEBPACK_IMPORTED_MODULE_11__/* .default */ .Z, {\n    componentName: "Popconfirm",\n    defaultLocale: _locale_default__WEBPACK_IMPORTED_MODULE_12__/* .default.Popconfirm */ .Z.Popconfirm\n  }, function (popconfirmLocale) {\n    return renderOverlay(prefixCls, popconfirmLocale);\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_popover__WEBPACK_IMPORTED_MODULE_13__/* .default */ .Z, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z)({}, restProps, {\n    prefixCls: prefixCls,\n    placement: placement,\n    onVisibleChange: onVisibleChange,\n    visible: visible,\n    _overlay: overlay,\n    overlayClassName: overlayClassNames,\n    ref: ref\n  }), (0,_util_reactNode__WEBPACK_IMPORTED_MODULE_14__/* .cloneElement */ .Tm)(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n\n      if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n\n      _onKeyDown(e);\n    }\n  }));\n});\nPopconfirm.defaultProps = {\n  placement: \'top\',\n  trigger: \'click\',\n  okType: \'primary\',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_ant_design_icons_es_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_15__/* .default */ .Z, null),\n  disabled: false\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Popconfirm);\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/popconfirm/index.js?')},43623:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38842);\n/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_default_less__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _popover_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34276);\n/* harmony import */ var _button_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13753);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(69691);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);\n // style dependencies\n// deps-lint-skip: tooltip, popover\n\n\n\n\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/popconfirm/style/index.js?")},78077:function(){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/input-number/style/index.less?")},69691:function(){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/popconfirm/style/index.less?")}}]);