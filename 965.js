(self["webpackChunktimeline"]=self["webpackChunktimeline"]||[]).push([[965],{71093:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"k\": function() { return /* reexport */ components; }\n});\n\n// EXTERNAL MODULE: ./node_modules/antd/dist/antd.css\nvar antd = __webpack_require__(72625);\n// EXTERNAL MODULE: ./node_modules/antd/es/row/style/index.js\nvar style = __webpack_require__(5317);\n// EXTERNAL MODULE: ./node_modules/antd/es/row/index.js\nvar row = __webpack_require__(87555);\n// EXTERNAL MODULE: ./node_modules/antd/es/col/style/index.js\nvar col_style = __webpack_require__(52222);\n// EXTERNAL MODULE: ./node_modules/antd/es/col/index.js\nvar col = __webpack_require__(65507);\n// EXTERNAL MODULE: ./node_modules/antd/es/date-picker/style/index.js\nvar date_picker_style = __webpack_require__(74393);\n// EXTERNAL MODULE: ./node_modules/antd/es/date-picker/index.js + 57 modules\nvar date_picker = __webpack_require__(8578);\n// EXTERNAL MODULE: ./node_modules/antd/es/select/style/index.js\nvar select_style = __webpack_require__(97140);\n// EXTERNAL MODULE: ./node_modules/antd/es/select/index.js + 30 modules\nvar es_select = __webpack_require__(98160);\n// EXTERNAL MODULE: ./node_modules/antd/es/input/style/index.js\nvar input_style = __webpack_require__(68137);\n// EXTERNAL MODULE: ./node_modules/antd/es/input/index.js + 16 modules\nvar input = __webpack_require__(13733);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(68699);\n// EXTERNAL MODULE: ./node_modules/antd/es/form/style/index.js\nvar form_style = __webpack_require__(67604);\n// EXTERNAL MODULE: ./node_modules/antd/es/form/index.js + 16 modules\nvar es_form = __webpack_require__(23972);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(38573);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(52663);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(94043);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(56051);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-formRender/src/components/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction trimString(objToTrim) {\n  var fields = (0,objectSpread2/* default */.Z)({}, objToTrim);\n\n  Object.keys((0,objectSpread2/* default */.Z)({}, fields)).forEach(keyName => {\n    if (typeof fields[keyName] === 'string') {\n      fields[keyName] = fields[keyName].trim();\n    }\n  });\n  return fields;\n}\n\nvar FormRender = (props, ref) => {\n  var _props$items;\n\n  var _Form$useForm = es_form/* default.useForm */.Z.useForm(),\n      _Form$useForm2 = (0,slicedToArray/* default */.Z)(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  function getValues() {\n    return _getValues.apply(this, arguments);\n  }\n\n  function _getValues() {\n    _getValues = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n      var formValue;\n      return regenerator_default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return form.validateFields();\n\n            case 2:\n              formValue = _context.sent;\n              return _context.abrupt(\"return\", trimString(formValue));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getValues.apply(this, arguments);\n  }\n\n  (0,react.useImperativeHandle)(ref, () => ({\n    resetFrom: form.resetFields,\n    getValues\n  }));\n  var getChildren = (0,react.useCallback)(_ref => {\n    var _comProps$placeholder, _comProps$placeholder2, _comProps$options;\n\n    var renderCom = _ref.renderCom,\n        _ref$comProps = _ref.comProps,\n        comProps = _ref$comProps === void 0 ? {} : _ref$comProps,\n        label = _ref.label;\n\n    if ( /*#__PURE__*/(0,react.isValidElement)(renderCom)) {\n      return renderCom;\n    }\n\n    switch (renderCom) {\n      case 'input':\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(input/* default */.Z, (0,objectSpread2/* default */.Z)({\n          placeholder: (_comProps$placeholder = comProps === null || comProps === void 0 ? void 0 : comProps.placeholder) !== null && _comProps$placeholder !== void 0 ? _comProps$placeholder : \"\\u8BF7\\u8F93\\u5165\".concat(label),\n          onPressEnter: () => props.onPressEnter && props.onPressEnter()\n        }, comProps));\n\n      case 'passwordInput':\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(input/* default.Password */.Z.Password, (0,objectSpread2/* default */.Z)({\n          placeholder: (_comProps$placeholder2 = comProps === null || comProps === void 0 ? void 0 : comProps.placeholder) !== null && _comProps$placeholder2 !== void 0 ? _comProps$placeholder2 : \"\\u8BF7\\u8F93\\u5165\".concat(label),\n          onPressEnter: () => props.onPressEnter && props.onPressEnter()\n        }, comProps));\n\n      case 'select':\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(es_select/* default */.Z, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, (0,objectSpread2/* default */.Z)({\n          allowClear: true,\n          placeholder: \"\\u8BF7\\u9009\\u62E9\".concat(label),\n          onChange: () => props.onPressEnter && props.onPressEnter()\n        }, comProps)), {}, {\n          children: comProps === null || comProps === void 0 ? void 0 : (_comProps$options = comProps.options) === null || _comProps$options === void 0 ? void 0 : _comProps$options.map(item => /*#__PURE__*/(0,jsx_runtime.jsx)(es_select/* default.Option */.Z.Option, {\n            value: item.value,\n            children: item.label\n          }, item.value))\n        }));\n\n      case 'rangePicker':\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(date_picker/* default.RangePicker */.Z.RangePicker, {\n          showTime: true,\n          style: {\n            width: '100%'\n          },\n          ranges: {\n            \u4eca\u5929: [moment_default()().startOf('day'), moment_default()().endOf('day')],\n            \u6628\u5929: [moment_default()().startOf('day').subtract(1, 'day'), moment_default()().endOf('day').subtract(1, 'day')],\n            \u672c\u5468: [moment_default()().startOf('week'), moment_default()().endOf('week')],\n            \u672c\u6708: [moment_default()().startOf('month'), moment_default()().endOf('month')]\n          }\n        });\n\n      default:\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(input/* default */.Z, {});\n    }\n  }, [props.onPressEnter]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(es_form/* default */.Z, {\n    form: form,\n    initialValues: props.initialValues,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(row/* default */.Z, {\n      gutter: 24,\n      children: props === null || props === void 0 ? void 0 : (_props$items = props.items) === null || _props$items === void 0 ? void 0 : _props$items.map(item => {\n        var _item$span;\n\n        return /*#__PURE__*/(0,jsx_runtime.jsx)(col/* default */.Z, {\n          span: (_item$span = item.span) !== null && _item$span !== void 0 ? _item$span : 8,\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(es_form/* default.Item */.Z.Item, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({\n            name: item.name,\n            label: item.label\n          }, props === null || props === void 0 ? void 0 : props.formItemLayout), item.itemProps), {}, {\n            children: getChildren(item)\n          }))\n        }, item.name);\n      })\n    })\n  });\n}; // FormRender.defaultProps = {};\n\n\n/* harmony default export */ var components = (/*#__PURE__*/(0,react.forwardRef)(FormRender));\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-formRender/index.ts\n\n\n\n\n//# sourceURL=webpack://timeline/./node_modules/@ifeng/plateform-formRender/index.ts_+_1_modules?")},60210:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "J": function() { return /* reexport */ plateform_privacyMobile; }\n});\n\n// EXTERNAL MODULE: ./node_modules/antd/dist/antd.css\nvar antd = __webpack_require__(72625);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(38573);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-privacyMobile/index.tsx\n\n\n\n\nvar PrivacyMobile = props => {\n  var mobile = props.mobile,\n      _props$hide = props.hide,\n      hide = _props$hide === void 0 ? true : _props$hide,\n      _props$begin = props.begin,\n      begin = _props$begin === void 0 ? 3 : _props$begin,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 4 : _props$end;\n\n  var _useState = (0,react.useState)(mobile),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      tel = _useState2[0],\n      setTel = _useState2[1];\n\n  (0,react.useEffect)(() => {\n    var phone = "".concat(tel.slice(0, begin), "****").concat(tel.slice(tel.length - end));\n    setTel(phone);\n  }, [begin, end, tel]);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n    children: hide ? tel : mobile\n  });\n};\n\n/* harmony default export */ var plateform_privacyMobile = (PrivacyMobile);\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-privacyMobile/index.ts\n\n\n\n\n//# sourceURL=webpack://timeline/./node_modules/@ifeng/plateform-privacyMobile/index.ts_+_1_modules?')},95249:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"U\": function() { return /* reexport */ components; }\n});\n\n// EXTERNAL MODULE: ./node_modules/antd/dist/antd.css\nvar antd = __webpack_require__(72625);\n// EXTERNAL MODULE: ./node_modules/antd/es/pagination/style/index.js\nvar style = __webpack_require__(91772);\n// EXTERNAL MODULE: ./node_modules/antd/es/pagination/index.js + 11 modules\nvar pagination = __webpack_require__(3989);\n// EXTERNAL MODULE: ./node_modules/antd/es/table/style/index.js + 1 modules\nvar table_style = __webpack_require__(83085);\n// EXTERNAL MODULE: ./node_modules/antd/es/table/index.js + 95 modules\nvar table = __webpack_require__(69320);\n// EXTERNAL MODULE: ./node_modules/antd/es/button/style/index.js\nvar button_style = __webpack_require__(13753);\n// EXTERNAL MODULE: ./node_modules/antd/es/button/index.js\nvar es_button = __webpack_require__(48429);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules\nvar objectWithoutProperties = __webpack_require__(3911);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(52663);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(68699);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(38573);\n// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(94043);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@ifeng/plateform-formRender/index.ts + 1 modules\nvar plateform_formRender = __webpack_require__(71093);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-queryTable/src/components/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nvar QueryTable = (props, ref) => {\n  var _props$children;\n\n  var _props$formItem = props.formItem,\n      formItem = _props$formItem === void 0 ? [] : _props$formItem,\n      _props$columns = props.columns,\n      columns = _props$columns === void 0 ? [] : _props$columns,\n      _props$rowKey = props.rowKey,\n      rowKey = _props$rowKey === void 0 ? 'key' : _props$rowKey,\n      _props$initialValues = props.initialValues,\n      initialValues = _props$initialValues === void 0 ? {} : _props$initialValues,\n      plusAction = props.plusAction,\n      query = props.query,\n      _props$list = props.list,\n      list = _props$list === void 0 ? [] : _props$list,\n      _props$total = props.total,\n      total = _props$total === void 0 ? 0 : _props$total,\n      loading = props.loading,\n      defaultPageSize = props.defaultPageSize,\n      _props$pageSizeOption = props.pageSizeOptions,\n      pageSizeOptions = _props$pageSizeOption === void 0 ? ['10', '20', '50', '100'] : _props$pageSizeOption,\n      notQueryWhilestart = props.notQueryWhilestart,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      _props$rowSelection = props.rowSelection,\n      rowSelection = _props$rowSelection === void 0 ? false : _props$rowSelection;\n  var defaultRef = (0,react.useRef)(null);\n  var formRef = props.formRef !== undefined ? props.formRef : defaultRef;\n  var defaultStep = defaultPageSize !== null && defaultPageSize !== void 0 ? defaultPageSize : Number(pageSizeOptions[0]); // \u5982\u679c\u4f20\u503c\u4e86\uff0c\u5219\u53d6defaultPageSize, \u5426\u5219\u53d6\u6bcf\u9875\u6761\u6570\u914d\u7f6e\u7684\u7b2c\u4e00\u9879\u3002\n\n  var defaultPaginetionInfo = {\n    current: 1,\n    pageSize: defaultStep\n  };\n\n  var _useState = (0,react.useState)(defaultPaginetionInfo),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      paginationInfo = _useState2[0],\n      setpaginationInfo = _useState2[1];\n\n  var _useState3 = (0,react.useState)({}),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      sortColumns = _useState4[0],\n      setsortColumns = _useState4[1]; // \u6392\u5e8f\n\n\n  var getRequestParams = params => {\n    var formatParams = {}; // eslint-disable-next-line no-restricted-syntax\n\n    for (var key in params) {\n      if (params[key] !== undefined) {\n        formatParams[key] = params[key];\n      }\n    }\n\n    return formatParams;\n  }; // \u67e5\u8be2\n\n\n  var search = /*#__PURE__*/function () {\n    var _ref = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee(pageInfoParams, sorter) {\n      var _formRef$current, values, current, pageSize, sendSorter, formatParams, paramsCurrent, paramsPageSize, sort, rest, requestParams;\n\n      return regenerator_default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.getValues();\n\n            case 3:\n              values = _context.sent;\n              current = paginationInfo.current, pageSize = paginationInfo.pageSize;\n              sendSorter = sorter || sortColumns;\n              formatParams = getRequestParams((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, values), {\n                current,\n                pageSize\n              }), pageInfoParams));\n              setpaginationInfo({\n                current: formatParams.current,\n                pageSize: formatParams.pageSize\n              }); // \u5224\u65ad\u6392\u5e8f\u53c2\u6570\u662f\u5426\u4f20\u9012\u7ed9\u4f7f\u7528\u7ec4\u4ef6\n              // sorter: {\n              //  field: 'xxx',    // columns\u5bf9\u5e94\u7684dataIndex\n              //  order: 'ascend' | 'descend' }\n\n              if (!(sendSorter === undefined || Object.keys(sendSorter).length === 0 || sendSorter.order === undefined)) {\n                formatParams.sorter = sendSorter;\n              }\n\n              paramsCurrent = formatParams.current, paramsPageSize = formatParams.pageSize, sort = formatParams.sorter, rest = (0,objectWithoutProperties/* default */.Z)(formatParams, [\"current\", \"pageSize\", \"sorter\"]);\n              requestParams = {\n                pagination: {\n                  current: paramsCurrent,\n                  pageSize: paramsPageSize\n                },\n                query: rest\n              };\n\n              if (formatParams.sorter) {\n                requestParams.sort = {\n                  type: formatParams.sorter.order,\n                  key: formatParams.sorter.field\n                };\n              }\n\n              query(requestParams); // \u53c2\u6570\u6ca1\u4f20sorter\u65f6sorter\u4e3aundefined\uff0c\u4f46\u9875\u9762\u7684\u6392\u5e8f\u4ecd\u7136\u4e3a\u4e0a\u6b21\u8bf7\u6c42\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u9700\u52a0\u5224\u65ad\uff0csorter\u5b58\u5728\u65f6\u518d\u53bb\u8bbe\u7f6e\n\n              if (sorter) {\n                setsortColumns(sorter);\n              }\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 16]]);\n    }));\n\n    return function search(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  (0,react.useImperativeHandle)(ref, () => ({\n    query: search,\n    reset: handleReset\n  }));\n  (0,react.useEffect)(() => {\n    if (!notQueryWhilestart) {\n      console.log('11111');\n      search((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, defaultPaginetionInfo), initialValues));\n    }\n  }, []);\n\n  function handleReset() {\n    var _formRef$current2;\n\n    (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.resetFrom();\n    search({\n      current: 1\n    });\n  }\n\n  var paginationOnChange = (current, pageSize) => {\n    // \u6bcf\u9875\u6761\u6570\u53d8\u5316\n    if (pageSize !== paginationInfo.pageSize) {\n      search({\n        current: 1,\n        pageSize\n      });\n    } else {\n      search({\n        current,\n        pageSize\n      });\n    }\n  };\n\n  var tableChange = (pagination, filters, sorter) => {\n    var field = sorter.field,\n        order = sorter.order;\n\n    if (field && (field !== (sortColumns !== null && sortColumns !== void 0 ? sortColumns : {}).field || order !== (sortColumns !== null && sortColumns !== void 0 ? sortColumns : {}).order)) {\n      search({}, {\n        field,\n        order\n      });\n    }\n  };\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n      style: {\n        position: 'relative',\n        marginBottom: '20px',\n        padding: '12px',\n        paddingBottom: '0',\n        background: 'white'\n      },\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(plateform_formRender/* FormRender */.k, {\n        ref: formRef,\n        items: formItem,\n        initialValues: initialValues,\n        onPressEnter: search,\n        formItemLayout: props.formItemLayout || formItemLayout\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n        style: {\n          top: '24px',\n          right: '24px',\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [plusAction || /*#__PURE__*/(0,jsx_runtime.jsx)(\"div\", {}), formItem.length > 0 && /*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(es_button/* default */.Z, {\n            onClick: handleReset,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"\\u91CD\\u7F6E\"\n          }, \"reset\"), /*#__PURE__*/(0,jsx_runtime.jsx)(es_button/* default */.Z, {\n            onClick: () => search({\n              current: 1\n            }),\n            type: \"primary\",\n            children: \"\\u67E5\\u8BE2\"\n          }, \"query\")]\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"div\", {\n      children: (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : /*#__PURE__*/(0,jsx_runtime.jsx)(table/* default */.Z, {\n        bordered: bordered,\n        size: \"small\",\n        dataSource: list,\n        columns: columns,\n        rowKey: rowKey,\n        pagination: false,\n        loading: loading,\n        onChange: tableChange,\n        rowSelection: rowSelection\n      })\n    }), total !== 0 && /*#__PURE__*/(0,jsx_runtime.jsx)(pagination/* default */.Z, {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: '20px'\n      },\n      total: total,\n      showTotal: totalCount => \"\\u5171\".concat(totalCount, \"\\u6761\\u6570\\u636E\"),\n      current: paginationInfo.current,\n      pageSize: paginationInfo.pageSize,\n      onChange: paginationOnChange,\n      showSizeChanger: true,\n      pageSizeOptions: pageSizeOptions\n    })]\n  });\n};\n\n/* harmony default export */ var components = (/*#__PURE__*/(0,react.forwardRef)(QueryTable));\n;// CONCATENATED MODULE: ./node_modules/@ifeng/plateform-queryTable/index.ts\n\n\n\n\n//# sourceURL=webpack://timeline/./node_modules/@ifeng/plateform-queryTable/index.ts_+_1_modules?")},66610:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ carousel; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(4763);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(3066);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__(45937);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(96285);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(76553);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(26306);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\nvar inherits = __webpack_require__(75304);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js + 1 modules\nvar createSuper = __webpack_require__(73109);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(47103);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(63309);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/initial-state.js\nvar initialState = {\n  animating: false,\n  autoplaying: null,\n  currentDirection: 0,\n  currentLeft: null,\n  currentSlide: 0,\n  direction: 1,\n  dragging: false,\n  edgeDragged: false,\n  initialized: false,\n  lazyLoadedList: [],\n  listHeight: null,\n  listWidth: null,\n  scrolling: false,\n  slideCount: null,\n  slideHeight: null,\n  slideWidth: null,\n  swipeLeft: null,\n  swiped: false,\n  // used by swipeEvent. differentites between touch and swipe.\n  swiping: false,\n  touchObject: {\n    startX: 0,\n    startY: 0,\n    curX: 0,\n    curY: 0\n  },\n  trackStyle: {},\n  trackWidth: 0,\n  targetSlide: 0\n};\n/* harmony default export */ var initial_state = (initialState);\n// EXTERNAL MODULE: ./node_modules/lodash/debounce.js\nvar debounce = __webpack_require__(23279);\nvar debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(35510);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/utils/innerSliderUtils.js\n\n\nfunction clamp(number, lowerBound, upperBound) {\n  return Math.max(lowerBound, Math.min(number, upperBound));\n}\nvar safePreventDefault = function safePreventDefault(event) {\n  var passiveEvents = ["onTouchStart", "onTouchMove", "onWheel"];\n\n  if (!passiveEvents.includes(event._reactName)) {\n    event.preventDefault();\n  }\n};\nvar getOnDemandLazySlides = function getOnDemandLazySlides(spec) {\n  var onDemandSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {\n      onDemandSlides.push(slideIndex);\n    }\n  }\n\n  return onDemandSlides;\n}; // return list of slides that need to be present\n\nvar getRequiredLazySlides = function getRequiredLazySlides(spec) {\n  var requiredSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    requiredSlides.push(slideIndex);\n  }\n\n  return requiredSlides;\n}; // startIndex that needs to be present\n\nvar lazyStartIndex = function lazyStartIndex(spec) {\n  return spec.currentSlide - lazySlidesOnLeft(spec);\n};\nvar lazyEndIndex = function lazyEndIndex(spec) {\n  return spec.currentSlide + lazySlidesOnRight(spec);\n};\nvar lazySlidesOnLeft = function lazySlidesOnLeft(spec) {\n  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;\n};\nvar lazySlidesOnRight = function lazySlidesOnRight(spec) {\n  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;\n}; // get width of an element\n\nvar getWidth = function getWidth(elem) {\n  return elem && elem.offsetWidth || 0;\n};\nvar getHeight = function getHeight(elem) {\n  return elem && elem.offsetHeight || 0;\n};\nvar getSwipeDirection = function getSwipeDirection(touchObject) {\n  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var xDist, yDist, r, swipeAngle;\n  xDist = touchObject.startX - touchObject.curX;\n  yDist = touchObject.startY - touchObject.curY;\n  r = Math.atan2(yDist, xDist);\n  swipeAngle = Math.round(r * 180 / Math.PI);\n\n  if (swipeAngle < 0) {\n    swipeAngle = 360 - Math.abs(swipeAngle);\n  }\n\n  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {\n    return "left";\n  }\n\n  if (swipeAngle >= 135 && swipeAngle <= 225) {\n    return "right";\n  }\n\n  if (verticalSwiping === true) {\n    if (swipeAngle >= 35 && swipeAngle <= 135) {\n      return "up";\n    } else {\n      return "down";\n    }\n  }\n\n  return "vertical";\n}; // whether or not we can go next\n\nvar canGoNext = function canGoNext(spec) {\n  var canGo = true;\n\n  if (!spec.infinite) {\n    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {\n      canGo = false;\n    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {\n      canGo = false;\n    }\n  }\n\n  return canGo;\n}; // given an object and a list of keys, return new object with given keys\n\nvar extractObject = function extractObject(spec, keys) {\n  var newObject = {};\n  keys.forEach(function (key) {\n    return newObject[key] = spec[key];\n  });\n  return newObject;\n}; // get initialized state\n\nvar initializedState = function initializedState(spec) {\n  // spec also contains listRef, trackRef\n  var slideCount = react.Children.count(spec.children);\n  var listNode = spec.listRef;\n  var listWidth = Math.ceil(getWidth(listNode));\n  var trackNode = spec.trackRef && spec.trackRef.node;\n  var trackWidth = Math.ceil(getWidth(trackNode));\n  var slideWidth;\n\n  if (!spec.vertical) {\n    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;\n\n    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {\n      centerPaddingAdj *= listWidth / 100;\n    }\n\n    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);\n  } else {\n    slideWidth = listWidth;\n  }\n\n  var slideHeight = listNode && getHeight(listNode.querySelector(\'[data-index="0"]\'));\n  var listHeight = slideHeight * spec.slidesToShow;\n  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;\n\n  if (spec.rtl && spec.currentSlide === undefined) {\n    currentSlide = slideCount - 1 - spec.initialSlide;\n  }\n\n  var lazyLoadedList = spec.lazyLoadedList || [];\n  var slidesToLoad = getOnDemandLazySlides((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n    currentSlide: currentSlide,\n    lazyLoadedList: lazyLoadedList\n  }));\n  lazyLoadedList = lazyLoadedList.concat(slidesToLoad);\n  var state = {\n    slideCount: slideCount,\n    slideWidth: slideWidth,\n    listWidth: listWidth,\n    trackWidth: trackWidth,\n    currentSlide: currentSlide,\n    slideHeight: slideHeight,\n    listHeight: listHeight,\n    lazyLoadedList: lazyLoadedList\n  };\n\n  if (spec.autoplaying === null && spec.autoplay) {\n    state["autoplaying"] = "playing";\n  }\n\n  return state;\n};\nvar slideHandler = function slideHandler(spec) {\n  var waitForAnimate = spec.waitForAnimate,\n      animating = spec.animating,\n      fade = spec.fade,\n      infinite = spec.infinite,\n      index = spec.index,\n      slideCount = spec.slideCount,\n      lazyLoad = spec.lazyLoad,\n      currentSlide = spec.currentSlide,\n      centerMode = spec.centerMode,\n      slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      useCSS = spec.useCSS;\n  var lazyLoadedList = spec.lazyLoadedList;\n  if (waitForAnimate && animating) return {};\n  var animationSlide = index,\n      finalSlide,\n      animationLeft,\n      finalLeft;\n  var state = {},\n      nextState = {};\n  var targetSlide = infinite ? index : clamp(index, 0, slideCount - 1);\n\n  if (fade) {\n    if (!infinite && (index < 0 || index >= slideCount)) return {};\n\n    if (index < 0) {\n      animationSlide = index + slideCount;\n    } else if (index >= slideCount) {\n      animationSlide = index - slideCount;\n    }\n\n    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {\n      lazyLoadedList = lazyLoadedList.concat(animationSlide);\n    }\n\n    state = {\n      animating: true,\n      currentSlide: animationSlide,\n      lazyLoadedList: lazyLoadedList,\n      targetSlide: animationSlide\n    };\n    nextState = {\n      animating: false,\n      targetSlide: animationSlide\n    };\n  } else {\n    finalSlide = animationSlide;\n\n    if (animationSlide < 0) {\n      finalSlide = animationSlide + slideCount;\n      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;\n    } else if (!canGoNext(spec) && animationSlide > currentSlide) {\n      animationSlide = finalSlide = currentSlide;\n    } else if (centerMode && animationSlide >= slideCount) {\n      animationSlide = infinite ? slideCount : slideCount - 1;\n      finalSlide = infinite ? 0 : slideCount - 1;\n    } else if (animationSlide >= slideCount) {\n      finalSlide = animationSlide - slideCount;\n      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;\n    }\n\n    if (!infinite && animationSlide + slidesToShow >= slideCount) {\n      finalSlide = slideCount - slidesToShow;\n    }\n\n    animationLeft = getTrackLeft((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      slideIndex: animationSlide\n    }));\n    finalLeft = getTrackLeft((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      slideIndex: finalSlide\n    }));\n\n    if (!infinite) {\n      if (animationLeft === finalLeft) animationSlide = finalSlide;\n      animationLeft = finalLeft;\n    }\n\n    if (lazyLoad) {\n      lazyLoadedList = lazyLoadedList.concat(getOnDemandLazySlides((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n        currentSlide: animationSlide\n      })));\n    }\n\n    if (!useCSS) {\n      state = {\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n          left: finalLeft\n        })),\n        lazyLoadedList: lazyLoadedList,\n        targetSlide: targetSlide\n      };\n    } else {\n      state = {\n        animating: true,\n        currentSlide: finalSlide,\n        trackStyle: getTrackAnimateCSS((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n          left: animationLeft\n        })),\n        lazyLoadedList: lazyLoadedList,\n        targetSlide: targetSlide\n      };\n      nextState = {\n        animating: false,\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n          left: finalLeft\n        })),\n        swipeLeft: null,\n        targetSlide: targetSlide\n      };\n    }\n  }\n\n  return {\n    state: state,\n    nextState: nextState\n  };\n};\nvar changeSlide = function changeSlide(spec, options) {\n  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;\n  var slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      slideCount = spec.slideCount,\n      currentSlide = spec.currentSlide,\n      previousTargetSlide = spec.targetSlide,\n      lazyLoad = spec.lazyLoad,\n      infinite = spec.infinite;\n  unevenOffset = slideCount % slidesToScroll !== 0;\n  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;\n\n  if (options.message === "previous") {\n    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;\n    targetSlide = currentSlide - slideOffset;\n\n    if (lazyLoad && !infinite) {\n      previousInt = currentSlide - slideOffset;\n      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;\n    }\n\n    if (!infinite) {\n      targetSlide = previousTargetSlide - slidesToScroll;\n    }\n  } else if (options.message === "next") {\n    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;\n    targetSlide = currentSlide + slideOffset;\n\n    if (lazyLoad && !infinite) {\n      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;\n    }\n\n    if (!infinite) {\n      targetSlide = previousTargetSlide + slidesToScroll;\n    }\n  } else if (options.message === "dots") {\n    // Click on dots\n    targetSlide = options.index * options.slidesToScroll;\n  } else if (options.message === "children") {\n    // Click on the slides\n    targetSlide = options.index;\n\n    if (infinite) {\n      var direction = siblingDirection((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n        targetSlide: targetSlide\n      }));\n\n      if (targetSlide > options.currentSlide && direction === "left") {\n        targetSlide = targetSlide - slideCount;\n      } else if (targetSlide < options.currentSlide && direction === "right") {\n        targetSlide = targetSlide + slideCount;\n      }\n    }\n  } else if (options.message === "index") {\n    targetSlide = Number(options.index);\n  }\n\n  return targetSlide;\n};\nvar keyHandler = function keyHandler(e, accessibility, rtl) {\n  if (e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) return "";\n  if (e.keyCode === 37) return rtl ? "next" : "previous";\n  if (e.keyCode === 39) return rtl ? "previous" : "next";\n  return "";\n};\nvar swipeStart = function swipeStart(e, swipe, draggable) {\n  e.target.tagName === "IMG" && safePreventDefault(e);\n  if (!swipe || !draggable && e.type.indexOf("mouse") !== -1) return "";\n  return {\n    dragging: true,\n    touchObject: {\n      startX: e.touches ? e.touches[0].pageX : e.clientX,\n      startY: e.touches ? e.touches[0].pageY : e.clientY,\n      curX: e.touches ? e.touches[0].pageX : e.clientX,\n      curY: e.touches ? e.touches[0].pageY : e.clientY\n    }\n  };\n};\nvar swipeMove = function swipeMove(e, spec) {\n  // spec also contains, trackRef and slideIndex\n  var scrolling = spec.scrolling,\n      animating = spec.animating,\n      vertical = spec.vertical,\n      swipeToSlide = spec.swipeToSlide,\n      verticalSwiping = spec.verticalSwiping,\n      rtl = spec.rtl,\n      currentSlide = spec.currentSlide,\n      edgeFriction = spec.edgeFriction,\n      edgeDragged = spec.edgeDragged,\n      onEdge = spec.onEdge,\n      swiped = spec.swiped,\n      swiping = spec.swiping,\n      slideCount = spec.slideCount,\n      slidesToScroll = spec.slidesToScroll,\n      infinite = spec.infinite,\n      touchObject = spec.touchObject,\n      swipeEvent = spec.swipeEvent,\n      listHeight = spec.listHeight,\n      listWidth = spec.listWidth;\n  if (scrolling) return;\n  if (animating) return safePreventDefault(e);\n  if (vertical && swipeToSlide && verticalSwiping) safePreventDefault(e);\n  var swipeLeft,\n      state = {};\n  var curLeft = getTrackLeft(spec);\n  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));\n\n  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {\n    return {\n      scrolling: true\n    };\n  }\n\n  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;\n  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;\n  var dotCount = Math.ceil(slideCount / slidesToScroll);\n  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);\n  var touchSwipeLength = touchObject.swipeLength;\n\n  if (!infinite) {\n    if (currentSlide === 0 && (swipeDirection === "right" || swipeDirection === "down") || currentSlide + 1 >= dotCount && (swipeDirection === "left" || swipeDirection === "up") || !canGoNext(spec) && (swipeDirection === "left" || swipeDirection === "up")) {\n      touchSwipeLength = touchObject.swipeLength * edgeFriction;\n\n      if (edgeDragged === false && onEdge) {\n        onEdge(swipeDirection);\n        state["edgeDragged"] = true;\n      }\n    }\n  }\n\n  if (!swiped && swipeEvent) {\n    swipeEvent(swipeDirection);\n    state["swiped"] = true;\n  }\n\n  if (!vertical) {\n    if (!rtl) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    } else {\n      swipeLeft = curLeft - touchSwipeLength * positionOffset;\n    }\n  } else {\n    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;\n  }\n\n  if (verticalSwiping) {\n    swipeLeft = curLeft + touchSwipeLength * positionOffset;\n  }\n\n  state = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, state), {}, {\n    touchObject: touchObject,\n    swipeLeft: swipeLeft,\n    trackStyle: getTrackCSS((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      left: swipeLeft\n    }))\n  });\n\n  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n    return state;\n  }\n\n  if (touchObject.swipeLength > 10) {\n    state["swiping"] = true;\n    safePreventDefault(e);\n  }\n\n  return state;\n};\nvar swipeEnd = function swipeEnd(e, spec) {\n  var dragging = spec.dragging,\n      swipe = spec.swipe,\n      touchObject = spec.touchObject,\n      listWidth = spec.listWidth,\n      touchThreshold = spec.touchThreshold,\n      verticalSwiping = spec.verticalSwiping,\n      listHeight = spec.listHeight,\n      swipeToSlide = spec.swipeToSlide,\n      scrolling = spec.scrolling,\n      onSwipe = spec.onSwipe,\n      targetSlide = spec.targetSlide,\n      currentSlide = spec.currentSlide,\n      infinite = spec.infinite;\n\n  if (!dragging) {\n    if (swipe) safePreventDefault(e);\n    return {};\n  }\n\n  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;\n  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping); // reset the state of touch related state variables.\n\n  var state = {\n    dragging: false,\n    edgeDragged: false,\n    scrolling: false,\n    swiping: false,\n    swiped: false,\n    swipeLeft: null,\n    touchObject: {}\n  };\n\n  if (scrolling) {\n    return state;\n  }\n\n  if (!touchObject.swipeLength) {\n    return state;\n  }\n\n  if (touchObject.swipeLength > minSwipe) {\n    safePreventDefault(e);\n\n    if (onSwipe) {\n      onSwipe(swipeDirection);\n    }\n\n    var slideCount, newSlide;\n    var activeSlide = infinite ? currentSlide : targetSlide;\n\n    switch (swipeDirection) {\n      case "left":\n      case "up":\n        newSlide = activeSlide + getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state["currentDirection"] = 0;\n        break;\n\n      case "right":\n      case "down":\n        newSlide = activeSlide - getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state["currentDirection"] = 1;\n        break;\n\n      default:\n        slideCount = activeSlide;\n    }\n\n    state["triggerSlideHandler"] = slideCount;\n  } else {\n    // Adjust the track back to it\'s original position.\n    var currentLeft = getTrackLeft(spec);\n    state["trackStyle"] = getTrackAnimateCSS((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      left: currentLeft\n    }));\n  }\n\n  return state;\n};\nvar getNavigableIndexes = function getNavigableIndexes(spec) {\n  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;\n  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var indexes = [];\n\n  while (breakpoint < max) {\n    indexes.push(breakpoint);\n    breakpoint = counter + spec.slidesToScroll;\n    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);\n  }\n\n  return indexes;\n};\nvar checkNavigable = function checkNavigable(spec, index) {\n  var navigables = getNavigableIndexes(spec);\n  var prevNavigable = 0;\n\n  if (index > navigables[navigables.length - 1]) {\n    index = navigables[navigables.length - 1];\n  } else {\n    for (var n in navigables) {\n      if (index < navigables[n]) {\n        index = prevNavigable;\n        break;\n      }\n\n      prevNavigable = navigables[n];\n    }\n  }\n\n  return index;\n};\nvar getSlideCount = function getSlideCount(spec) {\n  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;\n\n  if (spec.swipeToSlide) {\n    var swipedSlide;\n    var slickList = spec.listRef;\n    var slides = slickList.querySelectorAll && slickList.querySelectorAll(".slick-slide") || [];\n    Array.from(slides).every(function (slide) {\n      if (!spec.vertical) {\n        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      } else {\n        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    if (!swipedSlide) {\n      return 0;\n    }\n\n    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;\n    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;\n    return slidesTraversed;\n  } else {\n    return spec.slidesToScroll;\n  }\n};\nvar checkSpecKeys = function checkSpecKeys(spec, keysArray) {\n  return (// eslint-disable-next-line no-prototype-builtins\n    keysArray.reduce(function (value, key) {\n      return value && spec.hasOwnProperty(key);\n    }, true) ? null : console.error("Keys Missing:", spec)\n  );\n};\nvar getTrackCSS = function getTrackCSS(spec) {\n  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);\n  var trackWidth, trackHeight;\n  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;\n\n  if (!spec.vertical) {\n    trackWidth = getTotalSlides(spec) * spec.slideWidth;\n  } else {\n    trackHeight = trackChildren * spec.slideHeight;\n  }\n\n  var style = {\n    opacity: 1,\n    transition: "",\n    WebkitTransition: ""\n  };\n\n  if (spec.useTransform) {\n    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";\n    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";\n    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";\n    style = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, style), {}, {\n      WebkitTransform: WebkitTransform,\n      transform: transform,\n      msTransform: msTransform\n    });\n  } else {\n    if (spec.vertical) {\n      style["top"] = spec.left;\n    } else {\n      style["left"] = spec.left;\n    }\n  }\n\n  if (spec.fade) style = {\n    opacity: 1\n  };\n  if (trackWidth) style.width = trackWidth;\n  if (trackHeight) style.height = trackHeight; // Fallback for IE8\n\n  if (window && !window.addEventListener && window.attachEvent) {\n    if (!spec.vertical) {\n      style.marginLeft = spec.left + "px";\n    } else {\n      style.marginTop = spec.left + "px";\n    }\n  }\n\n  return style;\n};\nvar getTrackAnimateCSS = function getTrackAnimateCSS(spec) {\n  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);\n  var style = getTrackCSS(spec); // useCSS is true by default so it can be undefined\n\n  if (spec.useTransform) {\n    style.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;\n    style.transition = "transform " + spec.speed + "ms " + spec.cssEase;\n  } else {\n    if (spec.vertical) {\n      style.transition = "top " + spec.speed + "ms " + spec.cssEase;\n    } else {\n      style.transition = "left " + spec.speed + "ms " + spec.cssEase;\n    }\n  }\n\n  return style;\n};\nvar getTrackLeft = function getTrackLeft(spec) {\n  if (spec.unslick) {\n    return 0;\n  }\n\n  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);\n  var slideIndex = spec.slideIndex,\n      trackRef = spec.trackRef,\n      infinite = spec.infinite,\n      centerMode = spec.centerMode,\n      slideCount = spec.slideCount,\n      slidesToShow = spec.slidesToShow,\n      slidesToScroll = spec.slidesToScroll,\n      slideWidth = spec.slideWidth,\n      listWidth = spec.listWidth,\n      variableWidth = spec.variableWidth,\n      slideHeight = spec.slideHeight,\n      fade = spec.fade,\n      vertical = spec.vertical;\n  var slideOffset = 0;\n  var targetLeft;\n  var targetSlide;\n  var verticalOffset = 0;\n\n  if (fade || spec.slideCount === 1) {\n    return 0;\n  }\n\n  var slidesToOffset = 0;\n\n  if (infinite) {\n    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area\n    // if next scroll doesn\'t have enough children, just reach till the end of original slides instead of shifting slidesToScroll children\n\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);\n    } // shift current slide to center of the frame\n\n\n    if (centerMode) {\n      slidesToOffset += parseInt(slidesToShow / 2);\n    }\n  } else {\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = slidesToShow - slideCount % slidesToScroll;\n    }\n\n    if (centerMode) {\n      slidesToOffset = parseInt(slidesToShow / 2);\n    }\n  }\n\n  slideOffset = slidesToOffset * slideWidth;\n  verticalOffset = slidesToOffset * slideHeight;\n\n  if (!vertical) {\n    targetLeft = slideIndex * slideWidth * -1 + slideOffset;\n  } else {\n    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;\n  }\n\n  if (variableWidth === true) {\n    var targetSlideIndex;\n    var trackElem = trackRef && trackRef.node;\n    targetSlideIndex = slideIndex + getPreClones(spec);\n    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];\n    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;\n\n    if (centerMode === true) {\n      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;\n      targetSlide = trackElem && trackElem.children[targetSlideIndex];\n      targetLeft = 0;\n\n      for (var slide = 0; slide < targetSlideIndex; slide++) {\n        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;\n      }\n\n      targetLeft -= parseInt(spec.centerPadding);\n      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;\n    }\n  }\n\n  return targetLeft;\n};\nvar getPreClones = function getPreClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n\n  if (spec.variableWidth) {\n    return spec.slideCount;\n  }\n\n  return spec.slidesToShow + (spec.centerMode ? 1 : 0);\n};\nvar getPostClones = function getPostClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n\n  return spec.slideCount;\n};\nvar getTotalSlides = function getTotalSlides(spec) {\n  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);\n};\nvar siblingDirection = function siblingDirection(spec) {\n  if (spec.targetSlide > spec.currentSlide) {\n    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {\n      return "left";\n    }\n\n    return "right";\n  } else {\n    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {\n      return "right";\n    }\n\n    return "left";\n  }\n};\nvar slidesOnRight = function slidesOnRight(_ref) {\n  var slidesToShow = _ref.slidesToShow,\n      centerMode = _ref.centerMode,\n      rtl = _ref.rtl,\n      centerPadding = _ref.centerPadding; // returns no of slides on the right of active slide\n\n  if (centerMode) {\n    var right = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) right += 1;\n    if (rtl && slidesToShow % 2 === 0) right += 1;\n    return right;\n  }\n\n  if (rtl) {\n    return 0;\n  }\n\n  return slidesToShow - 1;\n};\nvar slidesOnLeft = function slidesOnLeft(_ref2) {\n  var slidesToShow = _ref2.slidesToShow,\n      centerMode = _ref2.centerMode,\n      rtl = _ref2.rtl,\n      centerPadding = _ref2.centerPadding; // returns no of slides on the left of active slide\n\n  if (centerMode) {\n    var left = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) left += 1;\n    if (!rtl && slidesToShow % 2 === 0) left += 1;\n    return left;\n  }\n\n  if (rtl) {\n    return slidesToShow - 1;\n  }\n\n  return 0;\n};\nvar canUseDOM = function canUseDOM() {\n  return !!(typeof window !== "undefined" && window.document && window.document.createElement);\n};\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/track.js\n\n\n\n\n\n\n\n\n\n\n\n\n // given specifications/props for a slide, fetch all the classes that need to be applied to the slide\n\nvar getSlideClasses = function getSlideClasses(spec) {\n  var slickActive, slickCenter, slickCloned;\n  var centerOffset, index;\n\n  if (spec.rtl) {\n    index = spec.slideCount - 1 - spec.index;\n  } else {\n    index = spec.index;\n  }\n\n  slickCloned = index < 0 || index >= spec.slideCount;\n\n  if (spec.centerMode) {\n    centerOffset = Math.floor(spec.slidesToShow / 2);\n    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;\n\n    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {\n      slickActive = true;\n    }\n  } else {\n    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;\n  }\n\n  var focusedSlide;\n\n  if (spec.targetSlide < 0) {\n    focusedSlide = spec.targetSlide + spec.slideCount;\n  } else if (spec.targetSlide >= spec.slideCount) {\n    focusedSlide = spec.targetSlide - spec.slideCount;\n  } else {\n    focusedSlide = spec.targetSlide;\n  }\n\n  var slickCurrent = index === focusedSlide;\n  return {\n    "slick-slide": true,\n    "slick-active": slickActive,\n    "slick-center": slickCenter,\n    "slick-cloned": slickCloned,\n    "slick-current": slickCurrent // dubious in case of RTL\n\n  };\n};\n\nvar getSlideStyle = function getSlideStyle(spec) {\n  var style = {};\n\n  if (spec.variableWidth === undefined || spec.variableWidth === false) {\n    style.width = spec.slideWidth;\n  }\n\n  if (spec.fade) {\n    style.position = "relative";\n\n    if (spec.vertical) {\n      style.top = -spec.index * parseInt(spec.slideHeight);\n    } else {\n      style.left = -spec.index * parseInt(spec.slideWidth);\n    }\n\n    style.opacity = spec.currentSlide === spec.index ? 1 : 0;\n\n    if (spec.useCSS) {\n      style.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;\n    }\n  }\n\n  return style;\n};\n\nvar getKey = function getKey(child, fallbackKey) {\n  return child.key + "-" + fallbackKey;\n};\n\nvar renderSlides = function renderSlides(spec) {\n  var key;\n  var slides = [];\n  var preCloneSlides = [];\n  var postCloneSlides = [];\n  var childrenCount = react.Children.count(spec.children);\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n  react.Children.forEach(spec.children, function (elem, index) {\n    var child;\n    var childOnClickOptions = {\n      message: "children",\n      index: index,\n      slidesToScroll: spec.slidesToScroll,\n      currentSlide: spec.currentSlide\n    }; // in case of lazyLoad, whether or not we want to fetch the slide\n\n    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {\n      child = elem;\n    } else {\n      child = /*#__PURE__*/react.createElement("div", null);\n    }\n\n    var childStyle = getSlideStyle((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      index: index\n    }));\n    var slideClass = child.props.className || "";\n    var slideClasses = getSlideClasses((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n      index: index\n    })); // push a cloned element of the desired slide\n\n    slides.push( /*#__PURE__*/react.cloneElement(child, {\n      key: "original" + getKey(child, index),\n      "data-index": index,\n      className: classnames_default()(slideClasses, slideClass),\n      tabIndex: "-1",\n      "aria-hidden": !slideClasses["slick-active"],\n      style: (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({\n        outline: "none"\n      }, child.props.style || {}), childStyle),\n      onClick: function onClick(e) {\n        child.props && child.props.onClick && child.props.onClick(e);\n\n        if (spec.focusOnSelect) {\n          spec.focusOnSelect(childOnClickOptions);\n        }\n      }\n    })); // if slide needs to be precloned or postcloned\n\n    if (spec.infinite && spec.fade === false) {\n      var preCloneNo = childrenCount - index;\n\n      if (preCloneNo <= getPreClones(spec) && childrenCount !== spec.slidesToShow) {\n        key = -preCloneNo;\n\n        if (key >= startIndex) {\n          child = elem;\n        }\n\n        slideClasses = getSlideClasses((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n          index: key\n        }));\n        preCloneSlides.push( /*#__PURE__*/react.cloneElement(child, {\n          key: "precloned" + getKey(child, key),\n          "data-index": key,\n          tabIndex: "-1",\n          className: classnames_default()(slideClasses, slideClass),\n          "aria-hidden": !slideClasses["slick-active"],\n          style: (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, child.props.style || {}), childStyle),\n          onClick: function onClick(e) {\n            child.props && child.props.onClick && child.props.onClick(e);\n\n            if (spec.focusOnSelect) {\n              spec.focusOnSelect(childOnClickOptions);\n            }\n          }\n        }));\n      }\n\n      if (childrenCount !== spec.slidesToShow) {\n        key = childrenCount + index;\n\n        if (key < endIndex) {\n          child = elem;\n        }\n\n        slideClasses = getSlideClasses((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n          index: key\n        }));\n        postCloneSlides.push( /*#__PURE__*/react.cloneElement(child, {\n          key: "postcloned" + getKey(child, key),\n          "data-index": key,\n          tabIndex: "-1",\n          className: classnames_default()(slideClasses, slideClass),\n          "aria-hidden": !slideClasses["slick-active"],\n          style: (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, child.props.style || {}), childStyle),\n          onClick: function onClick(e) {\n            child.props && child.props.onClick && child.props.onClick(e);\n\n            if (spec.focusOnSelect) {\n              spec.focusOnSelect(childOnClickOptions);\n            }\n          }\n        }));\n      }\n    }\n  });\n\n  if (spec.rtl) {\n    return preCloneSlides.concat(slides, postCloneSlides).reverse();\n  } else {\n    return preCloneSlides.concat(slides, postCloneSlides);\n  }\n};\n\nvar Track = /*#__PURE__*/function (_React$PureComponent) {\n  (0,inherits/* default */.Z)(Track, _React$PureComponent);\n\n  var _super = (0,createSuper/* default */.Z)(Track);\n\n  function Track() {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Track);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "node", null);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleRef", function (ref) {\n      _this.node = ref;\n    });\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Track, [{\n    key: "render",\n    value: function render() {\n      var slides = renderSlides(this.props);\n      var _this$props = this.props,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseOver = _this$props.onMouseOver,\n          onMouseLeave = _this$props.onMouseLeave;\n      var mouseEvents = {\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave\n      };\n      return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({\n        ref: this.handleRef,\n        className: "slick-track",\n        style: this.props.trackStyle\n      }, mouseEvents), slides);\n    }\n  }]);\n\n  return Track;\n}(react.PureComponent);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/dots.js\n\n\n\n\n\n\n\n\n\n\n\nvar getDotCount = function getDotCount(spec) {\n  var dots;\n\n  if (spec.infinite) {\n    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);\n  } else {\n    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;\n  }\n\n  return dots;\n};\n\nvar Dots = /*#__PURE__*/function (_React$PureComponent) {\n  (0,inherits/* default */.Z)(Dots, _React$PureComponent);\n\n  var _super = (0,createSuper/* default */.Z)(Dots);\n\n  function Dots() {\n    (0,classCallCheck/* default */.Z)(this, Dots);\n\n    return _super.apply(this, arguments);\n  }\n\n  (0,createClass/* default */.Z)(Dots, [{\n    key: "clickHandler",\n    value: function clickHandler(options, e) {\n      // In Autoplay the focus stays on clicked button even after transition\n      // to next slide. That only goes away by click somewhere outside\n      e.preventDefault();\n      this.props.clickHandler(options);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseOver = _this$props.onMouseOver,\n          onMouseLeave = _this$props.onMouseLeave,\n          infinite = _this$props.infinite,\n          slidesToScroll = _this$props.slidesToScroll,\n          slidesToShow = _this$props.slidesToShow,\n          slideCount = _this$props.slideCount,\n          currentSlide = _this$props.currentSlide;\n      var dotCount = getDotCount({\n        slideCount: slideCount,\n        slidesToScroll: slidesToScroll,\n        slidesToShow: slidesToShow,\n        infinite: infinite\n      });\n      var mouseEvents = {\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave\n      };\n      var dots = [];\n\n      for (var i = 0; i < dotCount; i++) {\n        var _rightBound = (i + 1) * slidesToScroll - 1;\n\n        var rightBound = infinite ? _rightBound : clamp(_rightBound, 0, slideCount - 1);\n\n        var _leftBound = rightBound - (slidesToScroll - 1);\n\n        var leftBound = infinite ? _leftBound : clamp(_leftBound, 0, slideCount - 1);\n        var className = classnames_default()({\n          "slick-active": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound\n        });\n        var dotOptions = {\n          message: "dots",\n          index: i,\n          slidesToScroll: slidesToScroll,\n          currentSlide: currentSlide\n        };\n        var onClick = this.clickHandler.bind(this, dotOptions);\n        dots = dots.concat( /*#__PURE__*/react.createElement("li", {\n          key: i,\n          className: className\n        }, /*#__PURE__*/react.cloneElement(this.props.customPaging(i), {\n          onClick: onClick\n        })));\n      }\n\n      return /*#__PURE__*/react.cloneElement(this.props.appendDots(dots), (0,objectSpread2/* default */.Z)({\n        className: this.props.dotsClass\n      }, mouseEvents));\n    }\n  }]);\n\n  return Dots;\n}(react.PureComponent);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/arrows.js\n\n\n\n\n\n\n\n\n\n\n\nvar PrevArrow = /*#__PURE__*/function (_React$PureComponent) {\n  (0,inherits/* default */.Z)(PrevArrow, _React$PureComponent);\n\n  var _super = (0,createSuper/* default */.Z)(PrevArrow);\n\n  function PrevArrow() {\n    (0,classCallCheck/* default */.Z)(this, PrevArrow);\n\n    return _super.apply(this, arguments);\n  }\n\n  (0,createClass/* default */.Z)(PrevArrow, [{\n    key: "clickHandler",\n    value: function clickHandler(options, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      this.props.clickHandler(options, e);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var prevClasses = {\n        "slick-arrow": true,\n        "slick-prev": true\n      };\n      var prevHandler = this.clickHandler.bind(this, {\n        message: "previous"\n      });\n\n      if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {\n        prevClasses["slick-disabled"] = true;\n        prevHandler = null;\n      }\n\n      var prevArrowProps = {\n        key: "0",\n        "data-role": "none",\n        className: classnames_default()(prevClasses),\n        style: {\n          display: "block"\n        },\n        onClick: prevHandler\n      };\n      var customProps = {\n        currentSlide: this.props.currentSlide,\n        slideCount: this.props.slideCount\n      };\n      var prevArrow;\n\n      if (this.props.prevArrow) {\n        prevArrow = /*#__PURE__*/react.cloneElement(this.props.prevArrow, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, prevArrowProps), customProps));\n      } else {\n        prevArrow = /*#__PURE__*/react.createElement("button", (0,esm_extends/* default */.Z)({\n          key: "0",\n          type: "button"\n        }, prevArrowProps), " ", "Previous");\n      }\n\n      return prevArrow;\n    }\n  }]);\n\n  return PrevArrow;\n}(react.PureComponent);\nvar NextArrow = /*#__PURE__*/function (_React$PureComponent2) {\n  (0,inherits/* default */.Z)(NextArrow, _React$PureComponent2);\n\n  var _super2 = (0,createSuper/* default */.Z)(NextArrow);\n\n  function NextArrow() {\n    (0,classCallCheck/* default */.Z)(this, NextArrow);\n\n    return _super2.apply(this, arguments);\n  }\n\n  (0,createClass/* default */.Z)(NextArrow, [{\n    key: "clickHandler",\n    value: function clickHandler(options, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      this.props.clickHandler(options, e);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var nextClasses = {\n        "slick-arrow": true,\n        "slick-next": true\n      };\n      var nextHandler = this.clickHandler.bind(this, {\n        message: "next"\n      });\n\n      if (!canGoNext(this.props)) {\n        nextClasses["slick-disabled"] = true;\n        nextHandler = null;\n      }\n\n      var nextArrowProps = {\n        key: "1",\n        "data-role": "none",\n        className: classnames_default()(nextClasses),\n        style: {\n          display: "block"\n        },\n        onClick: nextHandler\n      };\n      var customProps = {\n        currentSlide: this.props.currentSlide,\n        slideCount: this.props.slideCount\n      };\n      var nextArrow;\n\n      if (this.props.nextArrow) {\n        nextArrow = /*#__PURE__*/react.cloneElement(this.props.nextArrow, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, nextArrowProps), customProps));\n      } else {\n        nextArrow = /*#__PURE__*/react.createElement("button", (0,esm_extends/* default */.Z)({\n          key: "1",\n          type: "button"\n        }, nextArrowProps), " ", "Next");\n      }\n\n      return nextArrow;\n    }\n  }]);\n\n  return NextArrow;\n}(react.PureComponent);\n// EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\nvar ResizeObserver_es = __webpack_require__(55065);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/inner-slider.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar _excluded = ["animating"];\n\n\n\n\n\n\n\n\n\nvar InnerSlider = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(InnerSlider, _React$Component);\n\n  var _super = (0,createSuper/* default */.Z)(InnerSlider);\n\n  function InnerSlider(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, InnerSlider);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "listRefHandler", function (ref) {\n      return _this.list = ref;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "trackRefHandler", function (ref) {\n      return _this.track = ref;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "adaptHeight", function () {\n      if (_this.props.adaptiveHeight && _this.list) {\n        var elem = _this.list.querySelector("[data-index=\\"".concat(_this.state.currentSlide, "\\"]"));\n\n        _this.list.style.height = getHeight(elem) + "px";\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      _this.props.onInit && _this.props.onInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = getOnDemandLazySlides((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      }\n\n      var spec = (0,objectSpread2/* default */.Z)({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props);\n\n      _this.updateState(spec, true, function () {\n        _this.adaptHeight();\n\n        _this.props.autoplay && _this.autoPlay("playing");\n      });\n\n      if (_this.props.lazyLoad === "progressive") {\n        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);\n      }\n\n      _this.ro = new ResizeObserver_es/* default */.Z(function () {\n        if (_this.state.animating) {\n          _this.onWindowResized(false); // don\'t set trackStyle hence don\'t break animation\n\n\n          _this.callbackTimers.push(setTimeout(function () {\n            return _this.onWindowResized();\n          }, _this.props.speed));\n        } else {\n          _this.onWindowResized();\n        }\n      });\n\n      _this.ro.observe(_this.list);\n\n      document.querySelectorAll && Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function (slide) {\n        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;\n        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;\n      });\n\n      if (window.addEventListener) {\n        window.addEventListener("resize", _this.onWindowResized);\n      } else {\n        window.attachEvent("onresize", _this.onWindowResized);\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentWillUnmount", function () {\n      if (_this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n      }\n\n      if (_this.lazyLoadTimer) {\n        clearInterval(_this.lazyLoadTimer);\n      }\n\n      if (_this.callbackTimers.length) {\n        _this.callbackTimers.forEach(function (timer) {\n          return clearTimeout(timer);\n        });\n\n        _this.callbackTimers = [];\n      }\n\n      if (window.addEventListener) {\n        window.removeEventListener("resize", _this.onWindowResized);\n      } else {\n        window.detachEvent("onresize", _this.onWindowResized);\n      }\n\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      _this.ro.disconnect();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidUpdate", function (prevProps) {\n      _this.checkImagesLoad();\n\n      _this.props.onReInit && _this.props.onReInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = getOnDemandLazySlides((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      } // if (this.props.onLazyLoad) {\n      //   this.props.onLazyLoad([leftMostSlide])\n      // }\n\n\n      _this.adaptHeight();\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      var setTrackStyle = _this.didPropsChange(prevProps);\n\n      setTrackStyle && _this.updateState(spec, setTrackStyle, function () {\n        if (_this.state.currentSlide >= react.Children.count(_this.props.children)) {\n          _this.changeSlide({\n            message: "index",\n            index: react.Children.count(_this.props.children) - _this.props.slidesToShow,\n            currentSlide: _this.state.currentSlide\n          });\n        }\n\n        if (prevProps.autoplay !== _this.props.autoplay || prevProps.autoplaySpeed !== _this.props.autoplaySpeed) {\n          if (!prevProps.autoplay && _this.props.autoplay) {\n            _this.autoPlay("playing");\n          } else if (_this.props.autoplay) {\n            _this.autoPlay("update");\n          } else {\n            _this.pause("paused");\n          }\n        }\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onWindowResized", function (setTrackStyle) {\n      if (_this.debouncedResize) _this.debouncedResize.cancel();\n      _this.debouncedResize = debounce_default()(function () {\n        return _this.resizeWindow(setTrackStyle);\n      }, 50);\n\n      _this.debouncedResize();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "resizeWindow", function () {\n      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var isTrackMounted = Boolean(_this.track && _this.track.node); // prevent warning: setting state on unmounted component (server side rendering)\n\n      if (!isTrackMounted) return;\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      _this.updateState(spec, setTrackStyle, function () {\n        if (_this.props.autoplay) _this.autoPlay("update");else _this.pause("paused");\n      }); // animating state should be cleared while resizing, otherwise autoplay stops working\n\n\n      _this.setState({\n        animating: false\n      });\n\n      clearTimeout(_this.animationEndCallback);\n      delete _this.animationEndCallback;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "updateState", function (spec, setTrackStyle, callback) {\n      var updatedState = initializedState(spec);\n      spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), updatedState), {}, {\n        slideIndex: updatedState.currentSlide\n      });\n      var targetLeft = getTrackLeft(spec);\n      spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, spec), {}, {\n        left: targetLeft\n      });\n      var trackStyle = getTrackCSS(spec);\n\n      if (setTrackStyle || react.Children.count(_this.props.children) !== react.Children.count(spec.children)) {\n        updatedState["trackStyle"] = trackStyle;\n      }\n\n      _this.setState(updatedState, callback);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "ssrInit", function () {\n      if (_this.props.variableWidth) {\n        var _trackWidth = 0,\n            _trackLeft = 0;\n        var childrenWidths = [];\n        var preClones = getPreClones((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n        var postClones = getPostClones((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n\n        _this.props.children.forEach(function (child) {\n          childrenWidths.push(child.props.style.width);\n          _trackWidth += child.props.style.width;\n        });\n\n        for (var i = 0; i < preClones; i++) {\n          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];\n          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];\n        }\n\n        for (var _i = 0; _i < postClones; _i++) {\n          _trackWidth += childrenWidths[_i];\n        }\n\n        for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++) {\n          _trackLeft += childrenWidths[_i2];\n        }\n\n        var _trackStyle = {\n          width: _trackWidth + "px",\n          left: -_trackLeft + "px"\n        };\n\n        if (_this.props.centerMode) {\n          var currentWidth = "".concat(childrenWidths[_this.state.currentSlide], "px");\n          _trackStyle.left = "calc(".concat(_trackStyle.left, " + (100% - ").concat(currentWidth, ") / 2 ) ");\n        }\n\n        return {\n          trackStyle: _trackStyle\n        };\n      }\n\n      var childrenCount = react.Children.count(_this.props.children);\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state), {}, {\n        slideCount: childrenCount\n      });\n\n      var slideCount = getPreClones(spec) + getPostClones(spec) + childrenCount;\n      var trackWidth = 100 / _this.props.slidesToShow * slideCount;\n      var slideWidth = 100 / slideCount;\n      var trackLeft = -slideWidth * (getPreClones(spec) + _this.state.currentSlide) * trackWidth / 100;\n\n      if (_this.props.centerMode) {\n        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;\n      }\n\n      var trackStyle = {\n        width: trackWidth + "%",\n        left: trackLeft + "%"\n      };\n      return {\n        slideWidth: slideWidth + "%",\n        trackStyle: trackStyle\n      };\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "checkImagesLoad", function () {\n      var images = _this.list && _this.list.querySelectorAll && _this.list.querySelectorAll(".slick-slide img") || [];\n      var imagesCount = images.length,\n          loadedCount = 0;\n      Array.prototype.forEach.call(images, function (image) {\n        var handler = function handler() {\n          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();\n        };\n\n        if (!image.onclick) {\n          image.onclick = function () {\n            return image.parentNode.focus();\n          };\n        } else {\n          var prevClickHandler = image.onclick;\n\n          image.onclick = function () {\n            prevClickHandler();\n            image.parentNode.focus();\n          };\n        }\n\n        if (!image.onload) {\n          if (_this.props.lazyLoad) {\n            image.onload = function () {\n              _this.adaptHeight();\n\n              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));\n            };\n          } else {\n            image.onload = handler;\n\n            image.onerror = function () {\n              handler();\n              _this.props.onLazyLoadError && _this.props.onLazyLoadError();\n            };\n          }\n        }\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "progressiveLazyLoad", function () {\n      var slidesToLoad = [];\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state);\n\n      for (var index = _this.state.currentSlide; index < _this.state.slideCount + getPostClones(spec); index++) {\n        if (_this.state.lazyLoadedList.indexOf(index) < 0) {\n          slidesToLoad.push(index);\n          break;\n        }\n      }\n\n      for (var _index = _this.state.currentSlide - 1; _index >= -getPreClones(spec); _index--) {\n        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {\n          slidesToLoad.push(_index);\n          break;\n        }\n      }\n\n      if (slidesToLoad.length > 0) {\n        _this.setState(function (state) {\n          return {\n            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)\n          };\n        });\n\n        if (_this.props.onLazyLoad) {\n          _this.props.onLazyLoad(slidesToLoad);\n        }\n      } else {\n        if (_this.lazyLoadTimer) {\n          clearInterval(_this.lazyLoadTimer);\n          delete _this.lazyLoadTimer;\n        }\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slideHandler", function (index) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props = _this.props,\n          asNavFor = _this$props.asNavFor,\n          beforeChange = _this$props.beforeChange,\n          onLazyLoad = _this$props.onLazyLoad,\n          speed = _this$props.speed,\n          afterChange = _this$props.afterChange; // capture currentslide before state is updated\n\n      var currentSlide = _this.state.currentSlide;\n\n      var _slideHandler = slideHandler((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({\n        index: index\n      }, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        useCSS: _this.props.useCSS && !dontAnimate\n      })),\n          state = _slideHandler.state,\n          nextState = _slideHandler.nextState;\n\n      if (!state) return;\n      beforeChange && beforeChange(currentSlide, state.currentSlide);\n      var slidesToLoad = state.lazyLoadedList.filter(function (value) {\n        return _this.state.lazyLoadedList.indexOf(value) < 0;\n      });\n      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);\n\n      if (!_this.props.waitForAnimate && _this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n        afterChange && afterChange(currentSlide);\n        delete _this.animationEndCallback;\n      }\n\n      _this.setState(state, function () {\n        // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode\n        if (asNavFor && _this.asNavForIndex !== index) {\n          _this.asNavForIndex = index;\n          asNavFor.innerSlider.slideHandler(index);\n        }\n\n        if (!nextState) return;\n        _this.animationEndCallback = setTimeout(function () {\n          var animating = nextState.animating,\n              firstBatch = (0,objectWithoutProperties/* default */.Z)(nextState, _excluded);\n\n          _this.setState(firstBatch, function () {\n            _this.callbackTimers.push(setTimeout(function () {\n              return _this.setState({\n                animating: animating\n              });\n            }, 10));\n\n            afterChange && afterChange(state.currentSlide);\n            delete _this.animationEndCallback;\n          });\n        }, speed);\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeSlide", function (options) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state);\n\n      var targetSlide = changeSlide(spec, options);\n      if (targetSlide !== 0 && !targetSlide) return;\n\n      if (dontAnimate === true) {\n        _this.slideHandler(targetSlide, dontAnimate);\n      } else {\n        _this.slideHandler(targetSlide);\n      }\n\n      _this.props.autoplay && _this.autoPlay("update");\n\n      if (_this.props.focusOnSelect) {\n        var nodes = _this.list.querySelectorAll(".slick-current");\n\n        nodes[0] && nodes[0].focus();\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "clickHandler", function (e) {\n      if (_this.clickable === false) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      _this.clickable = true;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "keyHandler", function (e) {\n      var dir = keyHandler(e, _this.props.accessibility, _this.props.rtl);\n      dir !== "" && _this.changeSlide({\n        message: dir\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "selectHandler", function (options) {\n      _this.changeSlide(options);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "disableBodyScroll", function () {\n      var preventDefault = function preventDefault(e) {\n        e = e || window.event;\n        if (e.preventDefault) e.preventDefault();\n        e.returnValue = false;\n      };\n\n      window.ontouchmove = preventDefault;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "enableBodyScroll", function () {\n      window.ontouchmove = null;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "swipeStart", function (e) {\n      if (_this.props.verticalSwiping) {\n        _this.disableBodyScroll();\n      }\n\n      var state = swipeStart(e, _this.props.swipe, _this.props.draggable);\n      state !== "" && _this.setState(state);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "swipeMove", function (e) {\n      var state = swipeMove(e, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n\n      if (state["swiping"]) {\n        _this.clickable = false;\n      }\n\n      _this.setState(state);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "swipeEnd", function (e) {\n      var state = swipeEnd(e, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n      var triggerSlideHandler = state["triggerSlideHandler"];\n      delete state["triggerSlideHandler"];\n\n      _this.setState(state);\n\n      if (triggerSlideHandler === undefined) return;\n\n      _this.slideHandler(triggerSlideHandler);\n\n      if (_this.props.verticalSwiping) {\n        _this.enableBodyScroll();\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "touchEnd", function (e) {\n      _this.swipeEnd(e);\n\n      _this.clickable = true;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickPrev", function () {\n      // this and fellow methods are wrapped in setTimeout\n      // to make sure initialize setState has happened before\n      // any of such methods are called\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: "previous"\n        });\n      }, 0));\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickNext", function () {\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: "next"\n        });\n      }, 0));\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickGoTo", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      slide = Number(slide);\n      if (isNaN(slide)) return "";\n\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: "index",\n          index: slide,\n          currentSlide: _this.state.currentSlide\n        }, dontAnimate);\n      }, 0));\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "play", function () {\n      var nextIndex;\n\n      if (_this.props.rtl) {\n        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;\n      } else {\n        if (canGoNext((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state))) {\n          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;\n        } else {\n          return false;\n        }\n      }\n\n      _this.slideHandler(nextIndex);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "autoPlay", function (playType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (playType === "update") {\n        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {\n          return;\n        }\n      } else if (playType === "leave") {\n        if (autoplaying === "paused" || autoplaying === "focused") {\n          return;\n        }\n      } else if (playType === "blur") {\n        if (autoplaying === "paused" || autoplaying === "hovered") {\n          return;\n        }\n      }\n\n      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);\n\n      _this.setState({\n        autoplaying: "playing"\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "pause", function (pauseType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n        _this.autoplayTimer = null;\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (pauseType === "paused") {\n        _this.setState({\n          autoplaying: "paused"\n        });\n      } else if (pauseType === "focused") {\n        if (autoplaying === "hovered" || autoplaying === "playing") {\n          _this.setState({\n            autoplaying: "focused"\n          });\n        }\n      } else {\n        // pauseType  is \'hovered\'\n        if (autoplaying === "playing") {\n          _this.setState({\n            autoplaying: "hovered"\n          });\n        }\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onDotsOver", function () {\n      return _this.props.autoplay && _this.pause("hovered");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onDotsLeave", function () {\n      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onTrackOver", function () {\n      return _this.props.autoplay && _this.pause("hovered");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onTrackLeave", function () {\n      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onSlideFocus", function () {\n      return _this.props.autoplay && _this.pause("focused");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "onSlideBlur", function () {\n      return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "render", function () {\n      var className = classnames_default()("slick-slider", _this.props.className, {\n        "slick-vertical": _this.props.vertical,\n        "slick-initialized": true\n      });\n\n      var spec = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.props), _this.state);\n\n      var trackProps = extractObject(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding", "targetSlide", "useCSS"]);\n      var pauseOnHover = _this.props.pauseOnHover;\n      trackProps = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, trackProps), {}, {\n        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,\n        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,\n        onMouseOver: pauseOnHover ? _this.onTrackOver : null,\n        focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null\n      });\n      var dots;\n\n      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {\n        var dotProps = extractObject(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]);\n        var pauseOnDotsHover = _this.props.pauseOnDotsHover;\n        dotProps = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, dotProps), {}, {\n          clickHandler: _this.changeSlide,\n          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,\n          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,\n          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null\n        });\n        dots = /*#__PURE__*/react.createElement(Dots, dotProps);\n      }\n\n      var prevArrow, nextArrow;\n      var arrowProps = extractObject(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);\n      arrowProps.clickHandler = _this.changeSlide;\n\n      if (_this.props.arrows) {\n        prevArrow = /*#__PURE__*/react.createElement(PrevArrow, arrowProps);\n        nextArrow = /*#__PURE__*/react.createElement(NextArrow, arrowProps);\n      }\n\n      var verticalHeightStyle = null;\n\n      if (_this.props.vertical) {\n        verticalHeightStyle = {\n          height: _this.state.listHeight\n        };\n      }\n\n      var centerPaddingStyle = null;\n\n      if (_this.props.vertical === false) {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: "0px " + _this.props.centerPadding\n          };\n        }\n      } else {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: _this.props.centerPadding + " 0px"\n          };\n        }\n      }\n\n      var listStyle = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, verticalHeightStyle), centerPaddingStyle);\n\n      var touchMove = _this.props.touchMove;\n      var listProps = {\n        className: "slick-list",\n        style: listStyle,\n        onClick: _this.clickHandler,\n        onMouseDown: touchMove ? _this.swipeStart : null,\n        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onMouseUp: touchMove ? _this.swipeEnd : null,\n        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onTouchStart: touchMove ? _this.swipeStart : null,\n        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onTouchEnd: touchMove ? _this.touchEnd : null,\n        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onKeyDown: _this.props.accessibility ? _this.keyHandler : null\n      };\n      var innerSliderProps = {\n        className: className,\n        dir: "ltr",\n        style: _this.props.style\n      };\n\n      if (_this.props.unslick) {\n        listProps = {\n          className: "slick-list"\n        };\n        innerSliderProps = {\n          className: className\n        };\n      }\n\n      return /*#__PURE__*/react.createElement("div", innerSliderProps, !_this.props.unslick ? prevArrow : "", /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({\n        ref: _this.listRefHandler\n      }, listProps), /*#__PURE__*/react.createElement(Track, (0,esm_extends/* default */.Z)({\n        ref: _this.trackRefHandler\n      }, trackProps), _this.props.children)), !_this.props.unslick ? nextArrow : "", !_this.props.unslick ? dots : "");\n    });\n\n    _this.list = null;\n    _this.track = null;\n    _this.state = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, initial_state), {}, {\n      currentSlide: _this.props.initialSlide,\n      slideCount: react.Children.count(_this.props.children)\n    });\n    _this.callbackTimers = [];\n    _this.clickable = true;\n    _this.debouncedResize = null;\n\n    var ssrState = _this.ssrInit();\n\n    _this.state = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, _this.state), ssrState);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(InnerSlider, [{\n    key: "didPropsChange",\n    value: function didPropsChange(prevProps) {\n      var setTrackStyle = false;\n\n      for (var _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {\n        var key = _Object$keys[_i3]; // eslint-disable-next-line no-prototype-builtins\n\n        if (!prevProps.hasOwnProperty(key)) {\n          setTrackStyle = true;\n          break;\n        }\n\n        if ((0,esm_typeof/* default */.Z)(prevProps[key]) === "object" || typeof prevProps[key] === "function") {\n          continue;\n        }\n\n        if (prevProps[key] !== this.props[key]) {\n          setTrackStyle = true;\n          break;\n        }\n      }\n\n      return setTrackStyle || react.Children.count(this.props.children) !== react.Children.count(prevProps.children);\n    }\n  }]);\n\n  return InnerSlider;\n}(react.Component);\n// EXTERNAL MODULE: ./node_modules/json2mq/index.js\nvar json2mq = __webpack_require__(82255);\nvar json2mq_default = /*#__PURE__*/__webpack_require__.n(json2mq);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/default-props.js\n\nvar defaultProps = {\n  accessibility: true,\n  adaptiveHeight: false,\n  afterChange: null,\n  appendDots: function appendDots(dots) {\n    return /*#__PURE__*/react.createElement("ul", {\n      style: {\n        display: "block"\n      }\n    }, dots);\n  },\n  arrows: true,\n  autoplay: false,\n  autoplaySpeed: 3000,\n  beforeChange: null,\n  centerMode: false,\n  centerPadding: "50px",\n  className: "",\n  cssEase: "ease",\n  customPaging: function customPaging(i) {\n    return /*#__PURE__*/react.createElement("button", null, i + 1);\n  },\n  dots: false,\n  dotsClass: "slick-dots",\n  draggable: true,\n  easing: "linear",\n  edgeFriction: 0.35,\n  fade: false,\n  focusOnSelect: false,\n  infinite: true,\n  initialSlide: 0,\n  lazyLoad: null,\n  nextArrow: null,\n  onEdge: null,\n  onInit: null,\n  onLazyLoadError: null,\n  onReInit: null,\n  pauseOnDotsHover: false,\n  pauseOnFocus: false,\n  pauseOnHover: true,\n  prevArrow: null,\n  responsive: null,\n  rows: 1,\n  rtl: false,\n  slide: "div",\n  slidesPerRow: 1,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  speed: 500,\n  swipe: true,\n  swipeEvent: null,\n  swipeToSlide: false,\n  touchMove: true,\n  touchThreshold: 5,\n  useCSS: true,\n  useTransform: true,\n  variableWidth: false,\n  vertical: false,\n  waitForAnimate: true\n};\n/* harmony default export */ var default_props = (defaultProps);\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/slider.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Slider = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(Slider, _React$Component);\n\n  var _super = (0,createSuper/* default */.Z)(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Slider);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "innerSliderRefHandler", function (ref) {\n      return _this.innerSlider = ref;\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickPrev", function () {\n      return _this.innerSlider.slickPrev();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickNext", function () {\n      return _this.innerSlider.slickNext();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickGoTo", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _this.innerSlider.slickGoTo(slide, dontAnimate);\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickPause", function () {\n      return _this.innerSlider.pause("paused");\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "slickPlay", function () {\n      return _this.innerSlider.autoPlay("play");\n    });\n\n    _this.state = {\n      breakpoint: null\n    };\n    _this._responsiveMediaHandlers = [];\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Slider, [{\n    key: "media",\n    value: function media(query, handler) {\n      // javascript handler for  css media query\n      var mql = window.matchMedia(query);\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        if (matches) {\n          handler();\n        }\n      };\n\n      mql.addListener(listener);\n      listener(mql);\n\n      this._responsiveMediaHandlers.push({\n        mql: mql,\n        query: query,\n        listener: listener\n      });\n    } // handles responsive breakpoints\n\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this; // performance monitoring\n      //if (process.env.NODE_ENV !== \'production\') {\n      //const { whyDidYouUpdate } = require(\'why-did-you-update\')\n      //whyDidYouUpdate(React)\n      //}\n\n\n      if (this.props.responsive) {\n        var breakpoints = this.props.responsive.map(function (breakpt) {\n          return breakpt.breakpoint;\n        }); // sort them in increasing order of their numerical value\n\n        breakpoints.sort(function (x, y) {\n          return x - y;\n        });\n        breakpoints.forEach(function (breakpoint, index) {\n          // media query for each breakpoint\n          var bQuery;\n\n          if (index === 0) {\n            bQuery = json2mq_default()({\n              minWidth: 0,\n              maxWidth: breakpoint\n            });\n          } else {\n            bQuery = json2mq_default()({\n              minWidth: breakpoints[index - 1] + 1,\n              maxWidth: breakpoint\n            });\n          } // when not using server side rendering\n\n\n          canUseDOM() && _this2.media(bQuery, function () {\n            _this2.setState({\n              breakpoint: breakpoint\n            });\n          });\n        }); // Register media query for full screen. Need to support resize from small to large\n        // convert javascript object to media query string\n\n        var query = json2mq_default()({\n          minWidth: breakpoints.slice(-1)[0]\n        });\n        canUseDOM() && this.media(query, function () {\n          _this2.setState({\n            breakpoint: null\n          });\n        });\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._responsiveMediaHandlers.forEach(function (obj) {\n        obj.mql.removeListener(obj.listener);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this3 = this;\n\n      var settings;\n      var newProps;\n\n      if (this.state.breakpoint) {\n        newProps = this.props.responsive.filter(function (resp) {\n          return resp.breakpoint === _this3.state.breakpoint;\n        });\n        settings = newProps[0].settings === "unslick" ? "unslick" : (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, default_props), this.props), newProps[0].settings);\n      } else {\n        settings = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, default_props), this.props);\n      } // force scrolling by one if centerMode is on\n\n\n      if (settings.centerMode) {\n        if (settings.slidesToScroll > 1 && "production" !== "production") {\n          console.warn("slidesToScroll should be equal to 1 in centerMode, you are using ".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToScroll = 1;\n      } // force showing one slide and scrolling by one if the fade mode is on\n\n\n      if (settings.fade) {\n        if (settings.slidesToShow > 1 && "production" !== "production") {\n          console.warn("slidesToShow should be equal to 1 when fade is true, you\'re using ".concat(settings.slidesToShow));\n        }\n\n        if (settings.slidesToScroll > 1 && "production" !== "production") {\n          console.warn("slidesToScroll should be equal to 1 when fade is true, you\'re using ".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToShow = 1;\n        settings.slidesToScroll = 1;\n      } // makes sure that children is an array, even when there is only 1 child\n\n\n      var children = react.Children.toArray(this.props.children); // Children may contain false or null, so we should filter them\n      // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n\n      children = children.filter(function (child) {\n        if (typeof child === "string") {\n          return !!child.trim();\n        }\n\n        return !!child;\n      }); // rows and slidesPerRow logic is handled here\n\n      if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n        console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");\n        settings.variableWidth = false;\n      }\n\n      var newChildren = [];\n      var currentWidth = null;\n\n      for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n        var newSlide = [];\n\n        for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n          var row = [];\n\n          for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n            if (settings.variableWidth && children[k].props.style) {\n              currentWidth = children[k].props.style.width;\n            }\n\n            if (k >= children.length) break;\n            row.push( /*#__PURE__*/react.cloneElement(children[k], {\n              key: 100 * i + 10 * j + k,\n              tabIndex: -1,\n              style: {\n                width: "".concat(100 / settings.slidesPerRow, "%"),\n                display: "inline-block"\n              }\n            }));\n          }\n\n          newSlide.push( /*#__PURE__*/react.createElement("div", {\n            key: 10 * i + j\n          }, row));\n        }\n\n        if (settings.variableWidth) {\n          newChildren.push( /*#__PURE__*/react.createElement("div", {\n            key: i,\n            style: {\n              width: currentWidth\n            }\n          }, newSlide));\n        } else {\n          newChildren.push( /*#__PURE__*/react.createElement("div", {\n            key: i\n          }, newSlide));\n        }\n      }\n\n      if (settings === "unslick") {\n        var className = "regular slider " + (this.props.className || "");\n        return /*#__PURE__*/react.createElement("div", {\n          className: className\n        }, children);\n      } else if (newChildren.length <= settings.slidesToShow) {\n        settings.unslick = true;\n      }\n\n      return /*#__PURE__*/react.createElement(InnerSlider, (0,esm_extends/* default */.Z)({\n        style: this.props.style,\n        ref: this.innerSliderRefHandler\n      }, settings), newChildren);\n    }\n  }]);\n\n  return Slider;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./node_modules/@ant-design/react-slick/es/index.js\n\n/* harmony default export */ var es = (Slider);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(9054);\n;// CONCATENATED MODULE: ./node_modules/antd/es/carousel/index.js\n\n\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\nvar Carousel = /*#__PURE__*/react.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var _a$dots = _a.dots,\n      dots = _a$dots === void 0 ? true : _a$dots,\n      _a$arrows = _a.arrows,\n      arrows = _a$arrows === void 0 ? false : _a$arrows,\n      _a$draggable = _a.draggable,\n      draggable = _a$draggable === void 0 ? false : _a$draggable,\n      _a$dotPosition = _a.dotPosition,\n      dotPosition = _a$dotPosition === void 0 ? \'bottom\' : _a$dotPosition,\n      _a$vertical = _a.vertical,\n      vertical = _a$vertical === void 0 ? dotPosition === \'left\' || dotPosition === \'right\' : _a$vertical,\n      props = __rest(_a, ["dots", "arrows", "draggable", "dotPosition", "vertical"]);\n\n  var _React$useContext = react.useContext(context/* ConfigContext */.E_),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var slickRef = react.useRef();\n\n  var goTo = function goTo(slide) {\n    var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    slickRef.current.slickGoTo(slide, dontAnimate);\n  };\n\n  react.useImperativeHandle(ref, function () {\n    return {\n      goTo: goTo,\n      autoPlay: slickRef.current.innerSlider.autoPlay,\n      innerSlider: slickRef.current.innerSlider,\n      prev: slickRef.current.slickPrev,\n      next: slickRef.current.slickNext\n    };\n  }, [slickRef.current]);\n  var prevCount = react.useRef(react.Children.count(props.children));\n  react.useEffect(function () {\n    if (prevCount.current !== react.Children.count(props.children)) {\n      goTo(props.initialSlide || 0, false);\n      prevCount.current = react.Children.count(props.children);\n    }\n  }, [props.children]);\n\n  var newProps = (0,esm_extends/* default */.Z)({\n    vertical: vertical\n  }, props);\n\n  if (newProps.effect === \'fade\') {\n    newProps.fade = true;\n  }\n\n  var prefixCls = getPrefixCls(\'carousel\', newProps.prefixCls);\n  var dotsClass = \'slick-dots\';\n  var enableDots = !!dots;\n  var dsClass = classnames_default()(dotsClass, "".concat(dotsClass, "-").concat(dotPosition), typeof dots === \'boolean\' ? false : dots === null || dots === void 0 ? void 0 : dots.className);\n  var className = classnames_default()(prefixCls, (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-rtl"), direction === \'rtl\'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-vertical"), dotPosition === \'left\' || dotPosition === \'right\'), _classNames));\n  return /*#__PURE__*/react.createElement("div", {\n    className: className\n  }, /*#__PURE__*/react.createElement(es, (0,esm_extends/* default */.Z)({\n    ref: slickRef\n  }, newProps, {\n    dots: enableDots,\n    dotsClass: dsClass,\n    arrows: arrows,\n    draggable: draggable\n  })));\n});\n/* harmony default export */ var carousel = (Carousel);\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/carousel/index.js_+_9_modules?')},81285:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38842);\n/* harmony import */ var _style_default_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_default_less__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6838);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/carousel/style/index.js?")},82255:function(module,__unused_webpack_exports,__webpack_require__){eval("var camel2hyphen = __webpack_require__(60322);\n\nvar isDimension = function isDimension(feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function obj2mq(obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature); // Add px to dimension features\n\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n\n    if (index < features.length - 1) {\n      mq += ' and ';\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function json2mq(query) {\n  var mq = '';\n\n  if (typeof query === 'string') {\n    return query;\n  } // Handling array of media queries\n\n\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n\n      if (index < query.length - 1) {\n        mq += ', ';\n      }\n    });\n    return mq;\n  } // Handling single media query\n\n\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;\n\n//# sourceURL=webpack://timeline/./node_modules/json2mq/index.js?")},60322:function(module){eval("var camel2hyphen = function camel2hyphen(str) {\n  return str.replace(/[A-Z]/g, function (match) {\n    return '-' + match.toLowerCase();\n  }).toLowerCase();\n};\n\nmodule.exports = camel2hyphen;\n\n//# sourceURL=webpack://timeline/./node_modules/string-convert/camel2hyphen.js?")},6838:function(){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack://timeline/./node_modules/antd/es/carousel/style/index.less?")}}]);